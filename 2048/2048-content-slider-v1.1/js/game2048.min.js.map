{"version":3,"sources":["game2048.js"],"names":["f","exports","module","define","amd","window","global","self","this","Game2048","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","document","exportName","undefined","assign","VENDOR_PREFIXES","TEST_ELEMENT","createElement","TYPE_FUNCTION","round","Math","abs","now","Date","setTimeoutContext","fn","timeout","context","setTimeout","bindFn","invokeArrayArg","arg","Array","isArray","each","obj","iterator","forEach","hasOwnProperty","deprecate","method","name","message","deprecationMessage","stack","replace","log","console","warn","apply","arguments","Object","target","TypeError","output","index","source","nextKey","extend","dest","src","merge","keys","inherit","child","base","properties","childP","baseP","prototype","create","constructor","_super","boolOrFn","val","args","ifUndefined","val1","val2","addEventListeners","types","handler","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","inStr","str","find","indexOf","trim","split","inArray","findByKey","toArray","slice","uniqueArray","key","sort","results","values","push","b","prefixed","property","prefix","prop","camelProp","toUpperCase","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_MOUSE","COMPUTE_INTERVAL","INPUT_START","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","Input","manager","callback","options","inputTarget","domHandler","ev","enable","init","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","isFinal","session","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","angle","getAngle","distance","getDistance","offset","offsetDelta","prevDelta","prevInput","x","deltaX","y","deltaY","computeDeltaXY","offsetDirection","getDirection","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","scale","start","end","getScale","rotation","getRotation","maxPointers","velocity","velocityX","velocityY","direction","last","lastInterval","v","computeIntervalInputData","srcEvent","computeInputData","emit","recognize","clientX","clientY","p1","p2","props","sqrt","atan2","PI","evEl","evTarget","evWin","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","MouseInput","pressed","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","PointerEventInput","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SingleTouchInput","started","touches","all","changed","changedTouches","concat","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","TouchInput","targetIds","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","DEDUP_TIMEOUT","TouchMouseInput","mouse","primaryTouch","lastTouches","setLastTouch","eventData","lastTouch","lts","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","dx","dy","PREFIXED_TOUCH_ACTION","style","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","getTouchActionProps","TouchAction","value","set","compute","actions","update","touchAction","recognizers","recognizer","getTouchAction","hasPanX","hasPanY","cleanTouchActions","join","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_POSSIBLE","Recognizer","defaults","id","state","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","get","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","preset","Manager","recognizeWith","dropRecognizeWith","requireFailure","dropRequireFailure","hasRequireFailures","canRecognizeWith","event","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","inputClass","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","handlers","oldCssProps","createInputInstance","toggleCssProps","item","add","stop","force","stopped","curRecognizer","existing","remove","on","events","off","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","triggerDomEvent","INPUT_MOVE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","STATE_FAILED","Tap","Pan","Swipe","Pinch","Rotate","Press","Grid","Tile","GameManager","InputManager","View","StorageManager","config","size","storageManager","view","strings","inputManager","startTiles","bindGameContainer","gameContainer","bindRestartButton","restartButton","retryButton","bindKeepPlayingButton","keepPlayingButton","move","bind","restart","keepPlaying","helpTimeout","setup","blinkHelp","getElement","persistGameState","clearGameState","continueGame","isGameTerminated","over","won","previousState","getGameState","grid","cells","score","addStartTiles","actuate","addRandomTile","cellsAvailable","random","tile","randomAvailableCell","insertTile","getBestScore","setBestScore","setGameState","serialize","bestScore","terminated","prepareTiles","eachCell","mergedFrom","savePosition","moveTile","cell","updatePosition","vector","getVector","traversals","buildTraversals","moved","cellContent","positions","findFarthestPosition","next","merged","removeTile","farthest","positionsEqual","movesAvailable","0","pos","reverse","previous","withinBounds","cellAvailable","tileMatchesAvailable","other","first","second","pause","resume","./grid","./tile","fromState","empty","row","position","availableCells","floor","cellOccupied","cellState","HTMLView","classList","container","append","messageContainer","messageContainerParagraph","lower","textContent","KEEP_GOING","TRY_AGAIN","gridContainer","j","tileContainer","NEW_GAME","scoreWrapper","scoreLabel","SCORE","scoreContainer","hiScoreWrapper","hiScoreLabel","HIGH_SCORE","bestContainer","helpText","HELP_TEXT","helpHand","metadata","requestAnimationFrame","clearContainer","column","addTile","updateScore","updateBestScore","clearMessage","firstChild","removeChild","wrapper","inner","previousPosition","positionClass","classes","applyClasses","appendChild","setAttribute","normalizePosition","difference","addition","YOU_WIN","GAME_OVER","showHelp","hideHelp","callbacks","bindKeyboard","map","38","39","40","37","75","76","74","72","87","68","83","65","modifiers","altKey","ctrlKey","metaKey","shiftKey","mapped","mc","bindButtonPress","eventTouchend","hammerjs","6","LocalStorageManager","bestScoreKey","bestScoreDateKey","gameStateKey","supported","localStorageSupported","storage","localStorage","IMAGINARY","game2048","fakeStorage","_data","setItem","String","getItem","removeItem","clear","error","getCurrentDate","pad2","number","toString","padStart","getFullYear","getMonth","getDate","stateJSON","JSON","parse","gameState","stringify","7","_defineProperties","descriptor","enumerable","configurable","writable","defineProperty","instance","Constructor","_classCallCheck","gameManager","protoProps","staticProps","_createClass","./game_manager","./html_view","./input_manager","./local_storage_manager","./polyfills/animframe_polyfill","./polyfills/bind_polyfill","./polyfills/classlist_polyfill","./strings_de.json","8","lastTime","vendors","cancelAnimationFrame","currTime","getTime","timeToCall","max","9","Function","10","Element","documentElement","getter","DOMTokenList","token","contains","el","className","toggle","HTMLElement","__defineGetter__","11","12"],"mappings":"CAAA,SAAUA,GAAG,GAAoB,iBAAVC,SAAoC,oBAATC,OAAsBA,OAAOD,QAAQD,SAAS,GAAmB,mBAATG,QAAqBA,OAAOC,IAAKD,OAAO,GAAGH,OAAO,EAA0B,oBAATK,OAAwBA,OAA+B,oBAATC,OAAwBA,OAA6B,oBAAPC,KAAsBA,KAAYC,MAAOC,SAAWT,KAA7T,CAAoU,WAAqC,OAAmB,SAASU,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEf,GAAG,IAAIY,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIC,EAAE,mBAAmBC,SAASA,QAAQ,IAAIjB,GAAGgB,EAAE,OAAOA,EAAED,GAAE,GAAI,GAAGG,EAAE,OAAOA,EAAEH,GAAE,GAAI,IAAII,EAAE,IAAIC,MAAM,uBAAuBL,EAAE,KAAK,MAAMI,EAAEE,KAAK,mBAAmBF,EAAE,IAAIG,EAAEV,EAAEG,GAAG,CAACd,QAAQ,IAAIU,EAAEI,GAAG,GAAGQ,KAAKD,EAAErB,QAAQ,SAASS,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,IAAIY,EAAEA,EAAErB,QAAQS,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGd,QAAQ,IAAI,IAAIiB,EAAE,mBAAmBD,SAASA,QAAQF,EAAE,EAAEA,EAAEF,EAAEW,OAAOT,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACW,EAAE,CAAC,SAASR,EAAQf,GAAOD,IAMx1B,SAAUI,EAAQqB,EAAUC,EAAYC,GACtC,aAEF,IA+FIC,EA/FAC,EAAkB,CAAC,GAAI,SAAU,MAAO,KAAM,KAAM,KACpDC,EAAeL,EAASM,cAAc,OAEtCC,EAAgB,WAEhBC,EAAQC,KAAKD,MACbE,EAAMD,KAAKC,IACXC,EAAMC,KAAKD,IASf,SAASE,EAAkBC,EAAIC,EAASC,GACpC,OAAOC,WAAWC,EAAOJ,EAAIE,GAAUD,GAY3C,SAASI,EAAeC,EAAKN,EAAIE,GAC7B,QAAIK,MAAMC,QAAQF,KACdG,EAAKH,EAAKJ,EAAQF,GAAKE,IAChB,GAWf,SAASO,EAAKC,EAAKC,EAAUT,GACzB,IAAI3B,EAEJ,GAAKmC,EAIL,GAAIA,EAAIE,QACJF,EAAIE,QAAQD,EAAUT,QACnB,GAAIQ,EAAI1B,SAAWI,EAEtB,IADAb,EAAI,EACGA,EAAImC,EAAI1B,QACX2B,EAAS5B,KAAKmB,EAASQ,EAAInC,GAAIA,EAAGmC,GAClCnC,SAGJ,IAAKA,KAAKmC,EACNA,EAAIG,eAAetC,IAAMoC,EAAS5B,KAAKmB,EAASQ,EAAInC,GAAIA,EAAGmC,GAYvE,SAASI,EAAUC,EAAQC,EAAMC,GAC7B,IAAIC,EAAqB,sBAAwBF,EAAO,KAAOC,EAAU,SACzE,OAAO,WACH,IAAI9C,EAAI,IAAIS,MAAM,mBACduC,EAAQhD,GAAKA,EAAEgD,MAAQhD,EAAEgD,MAAMC,QAAQ,kBAAmB,IACzDA,QAAQ,cAAe,IACvBA,QAAQ,6BAA8B,kBAAoB,sBAE3DC,EAAMxD,EAAOyD,UAAYzD,EAAOyD,QAAQC,MAAQ1D,EAAOyD,QAAQD,KAInE,OAHIA,GACAA,EAAItC,KAAKlB,EAAOyD,QAASJ,EAAoBC,GAE1CJ,EAAOS,MAAMxD,KAAMyD,YAa9BpC,EADyB,mBAAlBqC,OAAOrC,OACL,SAAgBsC,GACrB,GAAIA,IAAWvC,GAAwB,OAAXuC,EACxB,MAAM,IAAIC,UAAU,8CAIxB,IADA,IAAIC,EAASH,OAAOC,GACXG,EAAQ,EAAGA,EAAQL,UAAUzC,OAAQ8C,IAAS,CACnD,IAAIC,EAASN,UAAUK,GACvB,GAAIC,IAAW3C,GAAwB,OAAX2C,EACxB,IAAK,IAAIC,KAAWD,EACZA,EAAOlB,eAAemB,KACtBH,EAAOG,GAAWD,EAAOC,IAKzC,OAAOH,GAGFH,OAAOrC,OAWpB,IAAI4C,EAASnB,EAAU,SAAgBoB,EAAMC,EAAKC,GAG9C,IAFA,IAAIC,EAAOX,OAAOW,KAAKF,GACnB5D,EAAI,EACDA,EAAI8D,EAAKrD,UACPoD,GAAUA,GAASF,EAAKG,EAAK9D,MAAQa,KACtC8C,EAAKG,EAAK9D,IAAM4D,EAAIE,EAAK9D,KAE7BA,IAEJ,OAAO2D,GACR,SAAU,iBASTE,EAAQtB,EAAU,SAAeoB,EAAMC,GACvC,OAAOF,EAAOC,EAAMC,GAAK,IAC1B,QAAS,iBAQZ,SAASG,EAAQC,EAAOC,EAAMC,GAC1B,IACIC,EADAC,EAAQH,EAAKI,WAGjBF,EAASH,EAAMK,UAAYlB,OAAOmB,OAAOF,IAClCG,YAAcP,EACrBG,EAAOK,OAASJ,EAEZF,GACApD,EAAOqD,EAAQD,GAUvB,SAASrC,EAAOJ,EAAIE,GAChB,OAAO,WACH,OAAOF,EAAGwB,MAAMtB,EAASuB,YAWjC,SAASuB,EAASC,EAAKC,GACnB,cAAWD,GAAOxD,EACPwD,EAAIzB,MAAM0B,GAAOA,EAAK,IAAkB9D,EAAW8D,GAEvDD,EASX,SAASE,EAAYC,EAAMC,GACvB,OAAQD,IAAShE,EAAaiE,EAAOD,EASzC,SAASE,EAAkB3B,EAAQ4B,EAAOC,GACtC/C,EAAKgD,EAASF,GAAQ,SAASG,GAC3B/B,EAAOgC,iBAAiBD,EAAMF,GAAS,KAU/C,SAASI,EAAqBjC,EAAQ4B,EAAOC,GACzC/C,EAAKgD,EAASF,GAAQ,SAASG,GAC3B/B,EAAOkC,oBAAoBH,EAAMF,GAAS,KAWlD,SAASM,EAAUC,EAAMC,GACrB,KAAOD,GAAM,CACT,GAAIA,GAAQC,EACR,OAAO,EAEXD,EAAOA,EAAKE,WAEhB,OAAO,EASX,SAASC,EAAMC,EAAKC,GAChB,OAA4B,EAArBD,EAAIE,QAAQD,GAQvB,SAASX,EAASU,GACd,OAAOA,EAAIG,OAAOC,MAAM,QAU5B,SAASC,EAAQrC,EAAKiC,EAAMK,GACxB,GAAItC,EAAIkC,UAAYI,EAChB,OAAOtC,EAAIkC,QAAQD,GAGnB,IADA,IAAI7F,EAAI,EACDA,EAAI4D,EAAInD,QAAQ,CACnB,GAAKyF,GAAatC,EAAI5D,GAAGkG,IAAcL,IAAWK,GAAatC,EAAI5D,KAAO6F,EACtE,OAAO7F,EAEXA,IAEJ,OAAQ,EAShB,SAASmG,EAAQhE,GACb,OAAOH,MAAMqC,UAAU+B,MAAM5F,KAAK2B,EAAK,GAU3C,SAASkE,EAAYzC,EAAK0C,EAAKC,GAK3B,IAJA,IAAIC,EAAU,GACVC,EAAS,GACTzG,EAAI,EAEDA,EAAI4D,EAAInD,QAAQ,CACnB,IAAIiE,EAAM4B,EAAM1C,EAAI5D,GAAGsG,GAAO1C,EAAI5D,GAC9BiG,EAAQQ,EAAQ/B,GAAO,GACvB8B,EAAQE,KAAK9C,EAAI5D,IAErByG,EAAOzG,GAAK0E,EACZ1E,IAaJ,OAVIuG,IAIIC,EAHCF,EAGSE,EAAQD,KAAK,SAAyBnG,EAAGuG,GAC/C,OAAOvG,EAAEkG,GAAOK,EAAEL,KAHZE,EAAQD,QAQnBC,EASX,SAASI,EAASzE,EAAK0E,GAKnB,IAJA,IAAIC,EAAQC,EACRC,EAAYH,EAAS,GAAGI,cAAgBJ,EAAST,MAAM,GAEvDpG,EAAI,EACDA,EAAIe,EAAgBN,QAAQ,CAI/B,IAFAsG,GADAD,EAAS/F,EAAgBf,IACP8G,EAASE,EAAYH,KAE3B1E,EACR,OAAO4E,EAEX/G,IAEJ,OAAOa,EAOX,IAAIqG,EAAY,EAUhB,SAASC,EAAoBC,GACzB,IAAIC,EAAMD,EAAQE,eAAiBF,EACnC,OAAQC,EAAIE,aAAeF,EAAIG,cAAgBlI,EAGnD,IAEImI,EAAiB,iBAAkBnI,EACnCoI,EAAyBd,EAAStH,EAAQ,kBAAoBuB,EAC9D8G,EAAqBF,GAJN,wCAIoCG,KAAKC,UAAUC,WAElEC,EAAmB,QAEnBC,EAAmB,QAGnBC,EAAmB,GAEnBC,EAAc,EAEdC,EAAY,EACZC,EAAe,EAEfC,EAAiB,EACjBC,EAAiB,EACjBC,EAAkB,EAClBC,EAAe,EACfC,EAAiB,GAEjBC,EAAuBJ,EAAiBC,EACxCI,EAAqBH,EAAeC,EACpCG,EAAgBF,EAAuBC,EAEvCE,EAAW,CAAC,IAAK,KACjBC,EAAkB,CAAC,UAAW,WASlC,SAASC,EAAMC,EAASC,GACpB,IAAIzJ,EAAOC,KACXA,KAAKuJ,QAAUA,EACfvJ,KAAKwJ,SAAWA,EAChBxJ,KAAK2H,QAAU4B,EAAQ5B,QACvB3H,KAAK2D,OAAS4F,EAAQE,QAAQC,YAI9B1J,KAAK2J,WAAa,SAASC,GACnB5E,EAASuE,EAAQE,QAAQI,OAAQ,CAACN,KAClCxJ,EAAKyF,QAAQoE,IAIrB5J,KAAK8J,OA4DT,SAASC,EAAaR,EAASS,EAAWC,GACtC,IAAIC,EAAcD,EAAME,SAASnJ,OAC7BoJ,EAAqBH,EAAMI,gBAAgBrJ,OAC3CsJ,EAAWN,EAAYvB,GAAgByB,EAAcE,GAAuB,EAC5EG,EAAWP,GAAatB,EAAYC,IAAkBuB,EAAcE,GAAuB,EAE/FH,EAAMK,UAAYA,EAClBL,EAAMM,UAAYA,EAEdD,IACAf,EAAQiB,QAAU,IAKtBP,EAAMD,UAAYA,EAiBtB,SAA0BT,EAASU,GAC/B,IAAIO,EAAUjB,EAAQiB,QAClBL,EAAWF,EAAME,SACjBM,EAAiBN,EAASnJ,OAGzBwJ,EAAQE,aACTF,EAAQE,WAAaC,EAAqBV,IAIzB,EAAjBQ,IAAuBD,EAAQI,cAC/BJ,EAAQI,cAAgBD,EAAqBV,GACnB,IAAnBQ,IACPD,EAAQI,eAAgB,GAG5B,IAAIF,EAAaF,EAAQE,WACrBE,EAAgBJ,EAAQI,cACxBC,EAAeD,EAAgBA,EAAcE,OAASJ,EAAWI,OAEjEA,EAASb,EAAMa,OAASC,GAAUZ,GACtCF,EAAMe,UAAYnJ,IAClBoI,EAAMgB,UAAYhB,EAAMe,UAAYN,EAAWM,UAE/Cf,EAAMiB,MAAQC,GAASN,EAAcC,GACrCb,EAAMmB,SAAWC,GAAYR,EAAcC,GA0B/C,SAAwBN,EAASP,GAC7B,IAAIa,EAASb,EAAMa,OACfQ,EAASd,EAAQe,aAAe,GAChCC,EAAYhB,EAAQgB,WAAa,GACjCC,EAAYjB,EAAQiB,WAAa,GAEjCxB,EAAMD,YAAcvB,GAAegD,EAAUzB,YAActB,IAC3D8C,EAAYhB,EAAQgB,UAAY,CAC5BE,EAAGD,EAAUE,QAAU,EACvBC,EAAGH,EAAUI,QAAU,GAG3BP,EAASd,EAAQe,YAAc,CAC3BG,EAAGZ,EAAOY,EACVE,EAAGd,EAAOc,IAIlB3B,EAAM0B,OAASH,EAAUE,GAAKZ,EAAOY,EAAIJ,EAAOI,GAChDzB,EAAM4B,OAASL,EAAUI,GAAKd,EAAOc,EAAIN,EAAOM,GA3ChDE,CAAetB,EAASP,GACxBA,EAAM8B,gBAAkBC,GAAa/B,EAAM0B,OAAQ1B,EAAM4B,QAEzD,IAAII,EAAkBC,GAAYjC,EAAMgB,UAAWhB,EAAM0B,OAAQ1B,EAAM4B,QACvE5B,EAAMkC,iBAAmBF,EAAgBP,EACzCzB,EAAMmC,iBAAmBH,EAAgBL,EACzC3B,EAAMgC,gBAAmBrK,EAAIqK,EAAgBP,GAAK9J,EAAIqK,EAAgBL,GAAMK,EAAgBP,EAAIO,EAAgBL,EAEhH3B,EAAMoC,MAAQzB,EAkNlB,SAAkB0B,EAAOC,GACrB,OAAOlB,GAAYkB,EAAI,GAAIA,EAAI,GAAIlD,GAAmBgC,GAAYiB,EAAM,GAAIA,EAAM,GAAIjD,GAnNxDmD,CAAS5B,EAAcT,SAAUA,GAAY,EAC3EF,EAAMwC,SAAW7B,EAsMrB,SAAqB0B,EAAOC,GACxB,OAAOpB,GAASoB,EAAI,GAAIA,EAAI,GAAIlD,GAAmB8B,GAASmB,EAAM,GAAIA,EAAM,GAAIjD,GAvM/CqD,CAAY9B,EAAcT,SAAUA,GAAY,EAEjFF,EAAM0C,YAAenC,EAAQiB,UAAsCxB,EAAME,SAASnJ,OAC9EwJ,EAAQiB,UAAUkB,YAAe1C,EAAME,SAASnJ,OAASwJ,EAAQiB,UAAUkB,YADtC1C,EAAME,SAASnJ,OAwC5D,SAAkCwJ,EAASP,GACvC,IAEI2C,EAAUC,EAAWC,EAAWC,EAFhCC,EAAOxC,EAAQyC,cAAgBhD,EAC/BgB,EAAYhB,EAAMe,UAAYgC,EAAKhC,UAGvC,GAAIf,EAAMD,WAAarB,IAA6BH,EAAZyC,GAAgC+B,EAAKJ,WAAaxL,GAAY,CAClG,IAAIuK,EAAS1B,EAAM0B,OAASqB,EAAKrB,OAC7BE,EAAS5B,EAAM4B,OAASmB,EAAKnB,OAE7BqB,EAAIhB,GAAYjB,EAAWU,EAAQE,GACvCgB,EAAYK,EAAExB,EACdoB,EAAYI,EAAEtB,EACdgB,EAAYhL,EAAIsL,EAAExB,GAAK9J,EAAIsL,EAAEtB,GAAMsB,EAAExB,EAAIwB,EAAEtB,EAC3CmB,EAAYf,GAAaL,EAAQE,GAEjCrB,EAAQyC,aAAehD,OAGvB2C,EAAWI,EAAKJ,SAChBC,EAAYG,EAAKH,UACjBC,EAAYE,EAAKF,UACjBC,EAAYC,EAAKD,UAGrB9C,EAAM2C,SAAWA,EACjB3C,EAAM4C,UAAYA,EAClB5C,EAAM6C,UAAYA,EAClB7C,EAAM8C,UAAYA,EAhElBI,CAAyB3C,EAASP,GAGlC,IAAItG,EAAS4F,EAAQ5B,QACjB7B,EAAUmE,EAAMmD,SAASzJ,OAAQA,KACjCA,EAASsG,EAAMmD,SAASzJ,QAE5BsG,EAAMtG,OAASA,EA/Df0J,CAAiB9D,EAASU,GAG1BV,EAAQ+D,KAAK,eAAgBrD,GAE7BV,EAAQgE,UAAUtD,GAClBV,EAAQiB,QAAQiB,UAAYxB,EA0HhC,SAASU,EAAqBV,GAK1B,IAFA,IAAIE,EAAW,GACX5J,EAAI,EACDA,EAAI0J,EAAME,SAASnJ,QACtBmJ,EAAS5J,GAAK,CACViN,QAAS9L,EAAMuI,EAAME,SAAS5J,GAAGiN,SACjCC,QAAS/L,EAAMuI,EAAME,SAAS5J,GAAGkN,UAErClN,IAGJ,MAAO,CACHyK,UAAWnJ,IACXsI,SAAUA,EACVW,OAAQC,GAAUZ,GAClBwB,OAAQ1B,EAAM0B,OACdE,OAAQ5B,EAAM4B,QAStB,SAASd,GAAUZ,GACf,IAAIM,EAAiBN,EAASnJ,OAG9B,GAAuB,IAAnByJ,EACA,MAAO,CACHiB,EAAGhK,EAAMyI,EAAS,GAAGqD,SACrB5B,EAAGlK,EAAMyI,EAAS,GAAGsD,UAK7B,IADA,IAAI/B,EAAI,EAAGE,EAAI,EAAGrL,EAAI,EACfA,EAAIkK,GACPiB,GAAKvB,EAAS5J,GAAGiN,QACjB5B,GAAKzB,EAAS5J,GAAGkN,QACjBlN,IAGJ,MAAO,CACHmL,EAAGhK,EAAMgK,EAAIjB,GACbmB,EAAGlK,EAAMkK,EAAInB,IAWrB,SAASyB,GAAYjB,EAAWS,EAAGE,GAC/B,MAAO,CACHF,EAAGA,EAAIT,GAAa,EACpBW,EAAGA,EAAIX,GAAa,GAU5B,SAASe,GAAaN,EAAGE,GACrB,OAAIF,IAAME,EACChD,EAGPhH,EAAI8J,IAAM9J,EAAIgK,GACPF,EAAI,EAAI7C,EAAiBC,EAE7B8C,EAAI,EAAI7C,EAAeC,EAUlC,SAASqC,GAAYqC,EAAIC,EAAIC,GAIzB,IAAIlC,EAAIiC,GAFJC,EADCA,GACOxE,GAEK,IAAMsE,EAAGE,EAAM,IAC5BhC,EAAI+B,EAAGC,EAAM,IAAMF,EAAGE,EAAM,IAEhC,OAAOjM,KAAKkM,KAAMnC,EAAIA,EAAME,EAAIA,GAUpC,SAAST,GAASuC,EAAIC,EAAIC,GAItB,IAAIlC,EAAIiC,GAFJC,EADCA,GACOxE,GAEK,IAAMsE,EAAGE,EAAM,IAC5BhC,EAAI+B,EAAGC,EAAM,IAAMF,EAAGE,EAAM,IAChC,OAA0B,IAAnBjM,KAAKmM,MAAMlC,EAAGF,GAAW/J,KAAKoM,GA1TzCzE,EAAM1E,UAAY,CAKdY,QAAS,aAKTsE,KAAM,WACF9J,KAAKgO,MAAQ1I,EAAkBtF,KAAK2H,QAAS3H,KAAKgO,KAAMhO,KAAK2J,YAC7D3J,KAAKiO,UAAY3I,EAAkBtF,KAAK2D,OAAQ3D,KAAKiO,SAAUjO,KAAK2J,YACpE3J,KAAKkO,OAAS5I,EAAkBoC,EAAoB1H,KAAK2H,SAAU3H,KAAKkO,MAAOlO,KAAK2J,aAMxFwE,QAAS,WACLnO,KAAKgO,MAAQpI,EAAqB5F,KAAK2H,QAAS3H,KAAKgO,KAAMhO,KAAK2J,YAChE3J,KAAKiO,UAAYrI,EAAqB5F,KAAK2D,OAAQ3D,KAAKiO,SAAUjO,KAAK2J,YACvE3J,KAAKkO,OAAStI,EAAqB8B,EAAoB1H,KAAK2H,SAAU3H,KAAKkO,MAAOlO,KAAK2J,cA4T/F,IAAIyE,GAAkB,CAClBC,UAAW5F,EACX6F,UA/Xa,EAgYbC,QAAS7F,GAGT8F,GAAuB,YACvBC,GAAsB,oBAO1B,SAASC,KACL1O,KAAKgO,KAAOQ,GACZxO,KAAKkO,MAAQO,GAEbzO,KAAK2O,SAAU,EAEfrF,EAAM9F,MAAMxD,KAAMyD,WAGtBa,EAAQoK,GAAYpF,EAAO,CAKvB9D,QAAS,SAAmBoE,GACxB,IAAII,EAAYoE,GAAgBxE,EAAGlE,MAG/BsE,EAAYvB,GAA6B,IAAdmB,EAAGgF,SAC9B5O,KAAK2O,SAAU,GA9ZV,EAiaL3E,GAAuC,IAAbJ,EAAGiF,QAC7B7E,EAAYtB,GAIX1I,KAAK2O,UAIN3E,EAAYtB,IACZ1I,KAAK2O,SAAU,GAGnB3O,KAAKwJ,SAASxJ,KAAKuJ,QAASS,EAAW,CACnCG,SAAU,CAACP,GACXS,gBAAiB,CAACT,GAClBkF,YAAavG,EACb6E,SAAUxD,QAKtB,IAAImF,GAAoB,CACpBC,YAAavG,EACbwG,YAzba,EA0bbC,UAAWxG,EACXyG,cAAexG,EACfyG,WAAYzG,GAIZ0G,GAAyB,CACzBC,EAAGhH,EACHiH,EAzciB,MA0cjBC,EAAGjH,EACHkH,EAzcoB,UA4cpBC,GAAyB,cACzBC,GAAwB,sCAa5B,SAASC,KACL5P,KAAKgO,KAAO0B,GACZ1P,KAAKkO,MAAQyB,GAEbrG,EAAM9F,MAAMxD,KAAMyD,WAElBzD,KAAK6P,MAAS7P,KAAKuJ,QAAQiB,QAAQsF,cAAgB,GAhBnDjQ,EAAOkQ,iBAAmBlQ,EAAOmQ,eACjCN,GAAyB,gBACzBC,GAAwB,6CAiB5BrL,EAAQsL,GAAmBtG,EAAO,CAK9B9D,QAAS,SAAmBoE,GACxB,IAAIiG,EAAQ7P,KAAK6P,MACbI,GAAgB,EAEhBC,EAAsBtG,EAAGlE,KAAKyK,cAAc/M,QAAQ,KAAM,IAC1D4G,EAAY+E,GAAkBmB,GAC9BpB,EAAcO,GAAuBzF,EAAGkF,cAAgBlF,EAAGkF,YAE3DsB,EAAWtB,GAAexG,EAG1B+H,EAAa7J,EAAQqJ,EAAOjG,EAAG0G,UAAW,aAG1CtG,EAAYvB,IAA8B,IAAdmB,EAAGgF,QAAgBwB,GAC3CC,EAAa,IACbR,EAAM5I,KAAK2C,GACXyG,EAAaR,EAAM7O,OAAS,GAEzBgJ,GAAatB,EAAYC,KAChCsH,GAAgB,GAIhBI,EAAa,IAKjBR,EAAMQ,GAAczG,EAEpB5J,KAAKwJ,SAASxJ,KAAKuJ,QAASS,EAAW,CACnCG,SAAU0F,EACVxF,gBAAiB,CAACT,GAClBkF,YAAaA,EACb1B,SAAUxD,IAGVqG,GAEAJ,EAAMU,OAAOF,EAAY,OAKrC,IAAIG,GAAyB,CACzBC,WAAYhI,EACZiI,UAlhBa,EAmhBbC,SAAUjI,EACVkI,YAAajI,GAWjB,SAASkI,KACL7Q,KAAKiO,SATwB,aAU7BjO,KAAKkO,MATwB,4CAU7BlO,KAAK8Q,SAAU,EAEfxH,EAAM9F,MAAMxD,KAAMyD,WAGtBa,EAAQuM,GAAkBvH,EAAO,CAC7B9D,QAAS,SAAmBoE,GACxB,IAAIlE,EAAO8K,GAAuB5G,EAAGlE,MAOrC,GAJIA,IAAS+C,IACTzI,KAAK8Q,SAAU,GAGd9Q,KAAK8Q,QAAV,CAIA,IAAIC,EAsBZ,SAAgCnH,EAAIlE,GAChC,IAAIsL,EAAMtK,EAAQkD,EAAGmH,SACjBE,EAAUvK,EAAQkD,EAAGsH,gBAErBxL,GAAQgD,EAAYC,KACpBqI,EAAMpK,EAAYoK,EAAIG,OAAOF,GAAU,cAAc,IAGzD,MAAO,CAACD,EAAKC,IA9B4BlQ,KAAKf,KAAM4J,EAAIlE,GAGhDA,GAAQgD,EAAYC,IAAiBoI,EAAQ,GAAG/P,OAAS+P,EAAQ,GAAG/P,QAAW,IAC/EhB,KAAK8Q,SAAU,GAGnB9Q,KAAKwJ,SAASxJ,KAAKuJ,QAAS7D,EAAM,CAC9ByE,SAAU4G,EAAQ,GAClB1G,gBAAiB0G,EAAQ,GACzBjC,YAAaxG,EACb8E,SAAUxD,QAsBtB,IAAIwH,GAAkB,CAClBX,WAAYhI,EACZiI,UAvlBa,EAwlBbC,SAAUjI,EACVkI,YAAajI,GAGb0I,GAAsB,4CAO1B,SAASC,KACLtR,KAAKiO,SAAWoD,GAChBrR,KAAKuR,UAAY,GAEjBjI,EAAM9F,MAAMxD,KAAMyD,WAGtBa,EAAQgN,GAAYhI,EAAO,CACvB9D,QAAS,SAAoBoE,GACzB,IAAIlE,EAAO0L,GAAgBxH,EAAGlE,MAC1BqL,EAoBZ,SAAoBnH,EAAIlE,GACpB,IAAI8L,EAAa9K,EAAQkD,EAAGmH,SACxBQ,EAAYvR,KAAKuR,UAGrB,GAAI7L,GAtoBS,EAsoBD+C,IAAmD,IAAtB+I,EAAWxQ,OAEhD,OADAuQ,EAAUC,EAAW,GAAGC,aAAc,EAC/B,CAACD,EAAYA,GAGxB,IAAIjR,EACAmR,EACAR,EAAiBxK,EAAQkD,EAAGsH,gBAC5BS,EAAuB,GACvBhO,EAAS3D,KAAK2D,OAQlB,GALA+N,EAAgBF,EAAWI,OAAO,SAASC,GACvC,OAAO/L,EAAU+L,EAAMlO,OAAQA,KAI/B+B,IAAS+C,EAET,IADAlI,EAAI,EACGA,EAAImR,EAAc1Q,QACrBuQ,EAAUG,EAAcnR,GAAGkR,aAAc,EACzClR,IAKRA,EAAI,EACJ,KAAOA,EAAI2Q,EAAelQ,QAClBuQ,EAAUL,EAAe3Q,GAAGkR,aAC5BE,EAAqB1K,KAAKiK,EAAe3Q,IAIzCmF,GAAQgD,EAAYC,WACb4I,EAAUL,EAAe3Q,GAAGkR,YAEvClR,IAGJ,OAAKoR,EAAqB3Q,OAInB,CAEH4F,EAAY8K,EAAcP,OAAOQ,GAAuB,cAAc,GACtEA,QANA,GAjEyB5Q,KAAKf,KAAM4J,EAAIlE,GACnCqL,GAIL/Q,KAAKwJ,SAASxJ,KAAKuJ,QAAS7D,EAAM,CAC9ByE,SAAU4G,EAAQ,GAClB1G,gBAAiB0G,EAAQ,GACzBjC,YAAaxG,EACb8E,SAAUxD,OA4EtB,IAAIkI,GAAgB,KAGpB,SAASC,KACLzI,EAAM9F,MAAMxD,KAAMyD,WAElB,IAAI+B,EAAUpD,EAAOpC,KAAKwF,QAASxF,MACnCA,KAAK6R,MAAQ,IAAIP,GAAWtR,KAAKuJ,QAAS/D,GAC1CxF,KAAKgS,MAAQ,IAAItD,GAAW1O,KAAKuJ,QAAS/D,GAE1CxF,KAAKiS,aAAe,KACpBjS,KAAKkS,YAAc,GA8CvB,SAASC,GAAaC,GAClB,IAAIP,EAAQO,EAAU/H,gBAAgB,GAEtC,GAAIwH,EAAMJ,aAAezR,KAAKiS,aAAc,CACxC,IAAII,EAAY,CAAC3G,EAAGmG,EAAMrE,QAAS5B,EAAGiG,EAAMpE,SAC5CzN,KAAKkS,YAAYjL,KAAKoL,GACtB,IAAIC,EAAMtS,KAAKkS,YAOf/P,WANsB,WAClB,IAAI5B,EAAI+R,EAAIjM,QAAQgM,IACX,EAAL9R,GACA+R,EAAI/B,OAAOhQ,EAAG,IAGMuR,KAxDpCxN,EAAQyN,GAAiBzI,EAAO,CAO5B9D,QAAS,SAAoB+D,EAASgJ,EAAYC,GAC9C,IAAIpC,EAAWoC,EAAU1D,aAAexG,EACpCmK,EAAWD,EAAU1D,aAAevG,EAExC,KAAIkK,GAAWD,EAAUE,oBAAsBF,EAAUE,mBAAmBC,kBAA5E,CAKA,GAAIvC,GAkBZ,SAAuBpG,EAAWoI,GAC1BpI,EAAYvB,GACZzI,KAAKiS,aAAeG,EAAU/H,gBAAgB,GAAGoH,WACjDU,GAAapR,KAAKf,KAAMoS,IACjBpI,GAAatB,EAAYC,IAChCwJ,GAAapR,KAAKf,KAAMoS,KAtBNrR,KAAKf,KAAMuS,EAAYC,QAClC,GAAIC,GA0CnB,SAA0BL,GAEtB,IADA,IAAI1G,EAAI0G,EAAUhF,SAASI,QAAS5B,EAAIwG,EAAUhF,SAASK,QAClDlN,EAAI,EAAGA,EAAIP,KAAKkS,YAAYlR,OAAQT,IAAK,CAC9C,IAAIF,EAAIL,KAAKkS,YAAY3R,GACrBqS,EAAKjR,KAAKC,IAAI8J,EAAIrL,EAAEqL,GAAImH,EAAKlR,KAAKC,IAAIgK,EAAIvL,EAAEuL,GAChD,GAAIgH,GA9ES,IA8EeC,GA9Ef,GA+ET,OAAO,EAGf,OAAO,GAnDoC9R,KAAKf,KAAMwS,GAC9C,OAGJxS,KAAKwJ,SAASD,EAASgJ,EAAYC,KAMvCrE,QAAS,WACLnO,KAAK6R,MAAM1D,UACXnO,KAAKgS,MAAM7D,aA0CnB,IAAI2E,GAAwB3L,EAAS5F,EAAawR,MAAO,eACrDC,GAAsBF,KAA0B1R,EAGhD6R,GAAuB,UAEvBC,GAA4B,eAC5BC,GAAoB,OACpBC,GAAqB,QACrBC,GAAqB,QACrBC,GA4IJ,WACI,IAAKN,GACD,OAAO,EAEX,IAAIO,EAAW,GACXC,EAAc3T,EAAO4T,KAAO5T,EAAO4T,IAAIC,SAO3C,MANA,CAAC,OAAQ,eAAgB,QAAS,QAAS,cAAe,QAAQ9Q,QAAQ,SAASqC,GAI/EsO,EAAStO,IAAOuO,GAAc3T,EAAO4T,IAAIC,SAAS,eAAgBzO,KAE/DsO,EAxJYI,GASvB,SAASC,GAAYrK,EAASsK,GAC1B7T,KAAKuJ,QAAUA,EACfvJ,KAAK8T,IAAID,GAGbD,GAAYhP,UAAY,CAKpBkP,IAAK,SAASD,GAENA,GAASZ,KACTY,EAAQ7T,KAAK+T,WAGbf,IAAuBhT,KAAKuJ,QAAQ5B,QAAQoL,OAASO,GAAiBO,KACtE7T,KAAKuJ,QAAQ5B,QAAQoL,MAAMD,IAAyBe,GAExD7T,KAAKgU,QAAUH,EAAM1D,cAAc7J,QAMvC2N,OAAQ,WACJjU,KAAK8T,IAAI9T,KAAKuJ,QAAQE,QAAQyK,cAOlCH,QAAS,WACL,IAAIC,EAAU,GAMd,OALAvR,EAAKzC,KAAKuJ,QAAQ4K,YAAa,SAASC,GAChCpP,EAASoP,EAAW3K,QAAQI,OAAQ,CAACuK,MACrCJ,EAAUA,EAAQ7C,OAAOiD,EAAWC,qBAgEpD,SAA2BL,GAEvB,GAAI9N,EAAM8N,EAASb,IACf,OAAOA,GAGX,IAAImB,EAAUpO,EAAM8N,EAASZ,IACzBmB,EAAUrO,EAAM8N,EAASX,IAM7B,GAAIiB,GAAWC,EACX,OAAOpB,GAIX,GAAImB,GAAWC,EACX,OAAOD,EAAUlB,GAAqBC,GAI1C,GAAInN,EAAM8N,EAASd,IACf,OAAOA,GAGX,MA9IoB,OAsDTsB,CAAkBR,EAAQS,KAAK,OAO1CC,gBAAiB,SAASzK,GACtB,IAAImD,EAAWnD,EAAMmD,SACjBL,EAAY9C,EAAM8B,gBAGtB,GAAI/L,KAAKuJ,QAAQiB,QAAQmK,UACrBvH,EAASwH,qBADb,CAKA,IAAIZ,EAAUhU,KAAKgU,QACfa,EAAU3O,EAAM8N,EAASb,MAAuBG,GAAiBH,IACjEoB,EAAUrO,EAAM8N,EAASX,MAAwBC,GAAiBD,IAClEiB,EAAUpO,EAAM8N,EAASZ,MAAwBE,GAAiBF,IAEtE,GAAIyB,EAAS,CAGT,IAAIC,EAAyC,IAA1B7K,EAAME,SAASnJ,OAC9B+T,EAAgB9K,EAAMmB,SAAW,EACjC4J,EAAiB/K,EAAMgB,UAAY,IAEvC,GAAI6J,GAAgBC,GAAiBC,EACjC,OAIR,IAAIV,IAAWC,EAKf,OAAIM,GACCN,GAAWxH,EAAY9D,GACvBqL,GAAWvH,EAAY7D,EACjBlJ,KAAKiV,WAAW7H,QAH3B,IAWJ6H,WAAY,SAAS7H,GACjBpN,KAAKuJ,QAAQiB,QAAQmK,WAAY,EACjCvH,EAASwH,mBAiFjB,IAAIM,GAAiB,EAcrB,SAASC,GAAW1L,GAChBzJ,KAAKyJ,QAAUpI,EAAO,GAAIrB,KAAKoV,SAAU3L,GAAW,IAEpDzJ,KAAKqV,GApgCE5N,IAsgCPzH,KAAKuJ,QAAU,KAGfvJ,KAAKyJ,QAAQI,OAAS1E,EAAYnF,KAAKyJ,QAAQI,QAAQ,GAEvD7J,KAAKsV,MAAQJ,GAEblV,KAAKuV,aAAe,GACpBvV,KAAKwV,YAAc,GAqOvB,SAASC,GAASH,GACd,OA5PkB,GA4PdA,EACO,SA/PG,EAgQHA,EACA,MAlQK,EAmQLA,EACA,OArQG,EAsQHA,EACA,QAEJ,GAQX,SAASI,GAAa3I,GAClB,OAAIA,GAAa/D,EACN,OACA+D,GAAahE,EACb,KACAgE,GAAalE,EACb,OACAkE,GAAajE,EACb,QAEJ,GASX,SAAS6M,GAA6BC,EAAiBxB,GACnD,IAAI7K,EAAU6K,EAAW7K,QACzB,OAAIA,EACOA,EAAQsM,IAAID,GAEhBA,EAQX,SAASE,KACLX,GAAW3R,MAAMxD,KAAMyD,WA6D3B,SAASsS,KACLD,GAAetS,MAAMxD,KAAMyD,WAE3BzD,KAAKgW,GAAK,KACVhW,KAAKiW,GAAK,KA4Ed,SAASC,KACLJ,GAAetS,MAAMxD,KAAMyD,WAsC/B,SAAS0S,KACLhB,GAAW3R,MAAMxD,KAAMyD,WAEvBzD,KAAKoW,OAAS,KACdpW,KAAKqW,OAAS,KAmElB,SAASC,KACLR,GAAetS,MAAMxD,KAAMyD,WA8B/B,SAAS8S,KACLT,GAAetS,MAAMxD,KAAMyD,WA2D/B,SAAS+S,KACLrB,GAAW3R,MAAMxD,KAAMyD,WAIvBzD,KAAKyW,OAAQ,EACbzW,KAAK0W,SAAU,EAEf1W,KAAKoW,OAAS,KACdpW,KAAKqW,OAAS,KACdrW,KAAK2W,MAAQ,EAqGjB,SAASC,GAAOjP,EAAS8B,GAGrB,OAFAA,EAAUA,GAAW,IACb0K,YAAchP,EAAYsE,EAAQ0K,YAAayC,GAAOxB,SAASyB,QAChE,IAAIC,GAAQnP,EAAS8B,GA7tBhC0L,GAAWvQ,UAAY,CAKnBwQ,SAAU,GAOVtB,IAAK,SAASrK,GAKV,OAJApI,EAAOrB,KAAKyJ,QAASA,GAGrBzJ,KAAKuJ,SAAWvJ,KAAKuJ,QAAQ2K,YAAYD,SAClCjU,MAQX+W,cAAe,SAASnB,GACpB,GAAIvT,EAAeuT,EAAiB,gBAAiB5V,MACjD,OAAOA,KAGX,IAAIuV,EAAevV,KAAKuV,aAMxB,OAJKA,GADLK,EAAkBD,GAA6BC,EAAiB5V,OAC9BqV,MAC9BE,EAAaK,EAAgBP,IAAMO,GACnBmB,cAAc/W,MAE3BA,MAQXgX,kBAAmB,SAASpB,GACxB,OAAIvT,EAAeuT,EAAiB,oBAAqB5V,QAIzD4V,EAAkBD,GAA6BC,EAAiB5V,aACzDA,KAAKuV,aAAaK,EAAgBP,KAJ9BrV,MAafiX,eAAgB,SAASrB,GACrB,GAAIvT,EAAeuT,EAAiB,iBAAkB5V,MAClD,OAAOA,KAGX,IAAIwV,EAAcxV,KAAKwV,YAMvB,OAJ+C,IAA3ChP,EAAQgP,EADZI,EAAkBD,GAA6BC,EAAiB5V,SAE5DwV,EAAYvO,KAAK2O,GACjBA,EAAgBqB,eAAejX,OAE5BA,MAQXkX,mBAAoB,SAAStB,GACzB,GAAIvT,EAAeuT,EAAiB,qBAAsB5V,MACtD,OAAOA,KAGX4V,EAAkBD,GAA6BC,EAAiB5V,MAChE,IAAI8D,EAAQ0C,EAAQxG,KAAKwV,YAAaI,GAItC,OAHa,EAAT9R,GACA9D,KAAKwV,YAAYjF,OAAOzM,EAAO,GAE5B9D,MAOXmX,mBAAoB,WAChB,OAAiC,EAA1BnX,KAAKwV,YAAYxU,QAQ5BoW,iBAAkB,SAASxB,GACvB,QAAS5V,KAAKuV,aAAaK,EAAgBP,KAQ/C/H,KAAM,SAASrD,GACX,IAAIlK,EAAOC,KACPsV,EAAQtV,KAAKsV,MAEjB,SAAShI,EAAK+J,GACVtX,EAAKwJ,QAAQ+D,KAAK+J,EAAOpN,GAIzBqL,EArJM,GAsJNhI,EAAKvN,EAAK0J,QAAQ4N,MAAQ5B,GAASH,IAGvChI,EAAKvN,EAAK0J,QAAQ4N,OAEdpN,EAAMqN,iBACNhK,EAAKrD,EAAMqN,iBA5JL,GAgKNhC,GACAhI,EAAKvN,EAAK0J,QAAQ4N,MAAQ5B,GAASH,KAU3CiC,QAAS,SAAStN,GACd,GAAIjK,KAAKwX,UACL,OAAOxX,KAAKsN,KAAKrD,GAGrBjK,KAAKsV,MA7KM,IAoLfkC,QAAS,WAEL,IADA,IAAIjX,EAAI,EACDA,EAAIP,KAAKwV,YAAYxU,QAAQ,CAChC,KAAMhB,KAAKwV,YAAYjV,GAAG+U,OAvLnB,GAuL2CJ,KAC9C,OAAO,EAEX3U,IAEJ,OAAO,GAOXgN,UAAW,SAASiF,GAGhB,IAAIiF,EAAiBpW,EAAO,GAAImR,GAGhC,IAAKxN,EAAShF,KAAKyJ,QAAQI,OAAQ,CAAC7J,KAAMyX,IAGtC,OAFAzX,KAAK0X,aACL1X,KAAKsV,MA3ME,IAgNM,GAAbtV,KAAKsV,QACLtV,KAAKsV,MAAQJ,IAGjBlV,KAAKsV,MAAQtV,KAAK2X,QAAQF,GAIT,GAAbzX,KAAKsV,OACLtV,KAAKuX,QAAQE,IAWrBE,QAAS,SAASnF,KAOlB6B,eAAgB,aAOhBqD,MAAO,cA8DXpT,EAAQwR,GAAgBX,GAAY,CAKhCC,SAAU,CAKNjL,SAAU,GASdyN,SAAU,SAAS3N,GACf,IAAI4N,EAAiB7X,KAAKyJ,QAAQU,SAClC,OAA0B,IAAnB0N,GAAwB5N,EAAME,SAASnJ,SAAW6W,GAS7DF,QAAS,SAAS1N,GACd,IAAIqL,EAAQtV,KAAKsV,MACbtL,EAAYC,EAAMD,UAElB8N,EAAuB,EAARxC,EACfyC,EAAU/X,KAAK4X,SAAS3N,GAG5B,OAAI6N,IAAiB9N,EAAYrB,IAAiBoP,GAvVpC,GAwVHzC,EACAwC,GAAgBC,EACnB/N,EAAYtB,EA5VV,EA6VK4M,EA/VL,EAgWOA,EA/VL,EAkWDA,EAnWD,EAKC,MAiXnBhR,EAAQyR,GAAeD,GAAgB,CAKnCV,SAAU,CACNiC,MAAO,MACPW,UAAW,GACX7N,SAAU,EACV4C,UAAW5D,GAGfkL,eAAgB,WACZ,IAAItH,EAAY/M,KAAKyJ,QAAQsD,UACzBiH,EAAU,GAOd,OANIjH,EAAY9D,GACZ+K,EAAQ/M,KAAKoM,IAEbtG,EAAY7D,GACZ8K,EAAQ/M,KAAKmM,IAEVY,GAGXiE,cAAe,SAAShO,GACpB,IAAIR,EAAUzJ,KAAKyJ,QACfyO,GAAW,EACX9M,EAAWnB,EAAMmB,SACjB2B,EAAY9C,EAAM8C,UAClBrB,EAAIzB,EAAM0B,OACVC,EAAI3B,EAAM4B,OAed,OAZMkB,EAAYtD,EAAQsD,YAIlB3B,EAHA3B,EAAQsD,UAAY9D,GACpB8D,EAAmB,IAANrB,EAAW9C,EAAkB8C,EAAI,EAAK7C,EAAiBC,EACpEoP,EAAWxM,GAAK1L,KAAKgW,GACVrU,KAAKC,IAAIqI,EAAM0B,UAE1BoB,EAAmB,IAANnB,EAAWhD,EAAkBgD,EAAI,EAAK7C,EAAeC,EAClEkP,EAAWtM,GAAK5L,KAAKiW,GACVtU,KAAKC,IAAIqI,EAAM4B,UAGlC5B,EAAM8C,UAAYA,EACXmL,GAAY9M,EAAW3B,EAAQuO,WAAajL,EAAYtD,EAAQsD,WAG3E6K,SAAU,SAAS3N,GACf,OAAO6L,GAAelR,UAAUgT,SAAS7W,KAAKf,KAAMiK,KAva1C,EAwaLjK,KAAKsV,SAxaA,EAwa0BtV,KAAKsV,QAAwBtV,KAAKiY,cAAchO,KAGxFqD,KAAM,SAASrD,GAEXjK,KAAKgW,GAAK/L,EAAM0B,OAChB3L,KAAKiW,GAAKhM,EAAM4B,OAEhB,IAAIkB,EAAY2I,GAAazL,EAAM8C,WAE/BA,IACA9C,EAAMqN,gBAAkBtX,KAAKyJ,QAAQ4N,MAAQtK,GAEjD/M,KAAK+E,OAAOuI,KAAKvM,KAAKf,KAAMiK,MAcpC3F,EAAQ4R,GAAiBJ,GAAgB,CAKrCV,SAAU,CACNiC,MAAO,QACPW,UAAW,EACX7N,SAAU,GAGdkK,eAAgB,WACZ,MAAO,CAAClB,KAGZyE,SAAU,SAAS3N,GACf,OAAOjK,KAAK+E,OAAO6S,SAAS7W,KAAKf,KAAMiK,KAClCtI,KAAKC,IAAIqI,EAAMoC,MAAQ,GAAKrM,KAAKyJ,QAAQuO,WApdpC,EAodiDhY,KAAKsV,QAGpEhI,KAAM,SAASrD,GACX,GAAoB,IAAhBA,EAAMoC,MAAa,CACnB,IAAI8L,EAAQlO,EAAMoC,MAAQ,EAAI,KAAO,MACrCpC,EAAMqN,gBAAkBtX,KAAKyJ,QAAQ4N,MAAQc,EAEjDnY,KAAK+E,OAAOuI,KAAKvM,KAAKf,KAAMiK,MAiBpC3F,EAAQ6R,GAAiBhB,GAAY,CAKjCC,SAAU,CACNiC,MAAO,QACPlN,SAAU,EACViO,KAAM,IACNJ,UAAW,GAGf3D,eAAgB,WACZ,MAAO,CAtrBS,SAyrBpBsD,QAAS,SAAS1N,GACd,IAAIR,EAAUzJ,KAAKyJ,QACf4O,EAAgBpO,EAAME,SAASnJ,SAAWyI,EAAQU,SAClDmO,EAAgBrO,EAAMmB,SAAW3B,EAAQuO,UACzCO,EAAYtO,EAAMgB,UAAYxB,EAAQ2O,KAM1C,GAJApY,KAAKqW,OAASpM,GAITqO,IAAkBD,GAAkBpO,EAAMD,WAAatB,EAAYC,KAAkB4P,EACtFvY,KAAK0X,aACF,GAAIzN,EAAMD,UAAYvB,EACzBzI,KAAK0X,QACL1X,KAAKoW,OAASrU,EAAkB,WAC5B/B,KAAKsV,MA1gBH,EA2gBFtV,KAAKuX,WACN9N,EAAQ2O,KAAMpY,WACd,GAAIiK,EAAMD,UAAYtB,EACzB,OA9gBM,EAghBV,OA7gBW,IAghBfgP,MAAO,WACHc,aAAaxY,KAAKoW,SAGtB9I,KAAM,SAASrD,GAvhBD,IAwhBNjK,KAAKsV,QAILrL,GAAUA,EAAMD,UAAYtB,EAC5B1I,KAAKuJ,QAAQ+D,KAAKtN,KAAKyJ,QAAQ4N,MAAQ,KAAMpN,IAE7CjK,KAAKqW,OAAOrL,UAAYnJ,IACxB7B,KAAKuJ,QAAQ+D,KAAKtN,KAAKyJ,QAAQ4N,MAAOrX,KAAKqW,aAevD/R,EAAQgS,GAAkBR,GAAgB,CAKtCV,SAAU,CACNiC,MAAO,SACPW,UAAW,EACX7N,SAAU,GAGdkK,eAAgB,WACZ,MAAO,CAAClB,KAGZyE,SAAU,SAAS3N,GACf,OAAOjK,KAAK+E,OAAO6S,SAAS7W,KAAKf,KAAMiK,KAClCtI,KAAKC,IAAIqI,EAAMwC,UAAYzM,KAAKyJ,QAAQuO,WAlkBnC,EAkkBgDhY,KAAKsV,UAcvEhR,EAAQiS,GAAiBT,GAAgB,CAKrCV,SAAU,CACNiC,MAAO,QACPW,UAAW,GACXpL,SAAU,GACVG,UAAW9D,EAAuBC,EAClCiB,SAAU,GAGdkK,eAAgB,WACZ,OAAO0B,GAAcnR,UAAUyP,eAAetT,KAAKf,OAGvD4X,SAAU,SAAS3N,GACf,IACI2C,EADAG,EAAY/M,KAAKyJ,QAAQsD,UAW7B,OARIA,GAAa9D,EAAuBC,GACpC0D,EAAW3C,EAAMgC,gBACVc,EAAY9D,EACnB2D,EAAW3C,EAAMkC,iBACVY,EAAY7D,IACnB0D,EAAW3C,EAAMmC,kBAGdpM,KAAK+E,OAAO6S,SAAS7W,KAAKf,KAAMiK,IACnC8C,EAAY9C,EAAM8B,iBAClB9B,EAAMmB,SAAWpL,KAAKyJ,QAAQuO,WAC9B/N,EAAM0C,aAAe3M,KAAKyJ,QAAQU,UAClCvI,EAAIgL,GAAY5M,KAAKyJ,QAAQmD,UAAY3C,EAAMD,UAAYtB,GAGnE4E,KAAM,SAASrD,GACX,IAAI8C,EAAY2I,GAAazL,EAAM8B,iBAC/BgB,GACA/M,KAAKuJ,QAAQ+D,KAAKtN,KAAKyJ,QAAQ4N,MAAQtK,EAAW9C,GAGtDjK,KAAKuJ,QAAQ+D,KAAKtN,KAAKyJ,QAAQ4N,MAAOpN,MA2B9C3F,EAAQkS,GAAerB,GAAY,CAK/BC,SAAU,CACNiC,MAAO,MACPlN,SAAU,EACVsO,KAAM,EACNC,SAAU,IACVN,KAAM,IACNJ,UAAW,EACXW,aAAc,IAGlBtE,eAAgB,WACZ,MAAO,CAACnB,KAGZyE,QAAS,SAAS1N,GACd,IAAIR,EAAUzJ,KAAKyJ,QAEf4O,EAAgBpO,EAAME,SAASnJ,SAAWyI,EAAQU,SAClDmO,EAAgBrO,EAAMmB,SAAW3B,EAAQuO,UACzCY,EAAiB3O,EAAMgB,UAAYxB,EAAQ2O,KAI/C,GAFApY,KAAK0X,QAEAzN,EAAMD,UAAYvB,GAAgC,IAAfzI,KAAK2W,MACzC,OAAO3W,KAAK6Y,cAKhB,GAAIP,GAAiBM,GAAkBP,EAAe,CAClD,GAAIpO,EAAMD,WAAatB,EACnB,OAAO1I,KAAK6Y,cAGhB,IAAIC,GAAgB9Y,KAAKyW,OAASxM,EAAMe,UAAYhL,KAAKyW,MAAQhN,EAAQiP,SACrEK,GAAiB/Y,KAAK0W,SAAWrL,GAAYrL,KAAK0W,QAASzM,EAAMa,QAAUrB,EAAQkP,aAgBvF,GAdA3Y,KAAKyW,MAAQxM,EAAMe,UACnBhL,KAAK0W,QAAUzM,EAAMa,OAEhBiO,GAAkBD,EAGnB9Y,KAAK2W,OAAS,EAFd3W,KAAK2W,MAAQ,EAKjB3W,KAAKqW,OAASpM,EAKG,GADFjK,KAAK2W,MAAQlN,EAAQgP,KAIhC,OAAKzY,KAAKmX,sBAGNnX,KAAKoW,OAASrU,EAAkB,WAC5B/B,KAAKsV,MAltBX,EAmtBMtV,KAAKuX,WACN9N,EAAQiP,SAAU1Y,MAttBvB,GAEA,EAytBV,OAttBW,IAytBf6Y,YAAa,WAIT,OAHA7Y,KAAKoW,OAASrU,EAAkB,WAC5B/B,KAAKsV,MA3tBE,IA4tBRtV,KAAKyJ,QAAQiP,SAAU1Y,MA5tBf,IAguBf0X,MAAO,WACHc,aAAaxY,KAAKoW,SAGtB9I,KAAM,WAvuBQ,GAwuBNtN,KAAKsV,QACLtV,KAAKqW,OAAO2C,SAAWhZ,KAAK2W,MAC5B3W,KAAKuJ,QAAQ+D,KAAKtN,KAAKyJ,QAAQ4N,MAAOrX,KAAKqW,YAoBvDO,GAAOqC,QAAU,QAMjBrC,GAAOxB,SAAW,CAOd8D,WAAW,EAQXhF,YAAajB,GAMbpJ,QAAQ,EASRH,YAAa,KAObyP,WAAY,KAOZtC,OAAQ,CAEJ,CAACP,GAAkB,CAACzM,QAAQ,IAC5B,CAACqM,GAAiB,CAACrM,QAAQ,GAAQ,CAAC,WACpC,CAAC0M,GAAiB,CAACxJ,UAAW9D,IAC9B,CAAC8M,GAAe,CAAChJ,UAAW9D,GAAuB,CAAC,UACpD,CAACuN,IACD,CAACA,GAAe,CAACa,MAAO,YAAaoB,KAAM,GAAI,CAAC,QAChD,CAACtC,KAQLiD,SAAU,CAMNC,WAAY,OAOZC,YAAa,OASbC,aAAc,OAOdC,eAAgB,OAOhBC,SAAU,OAQVC,kBAAmB,kBAa3B,SAAS5C,GAAQnP,EAAS8B,GACtBzJ,KAAKyJ,QAAUpI,EAAO,GAAIuV,GAAOxB,SAAU3L,GAAW,IAEtDzJ,KAAKyJ,QAAQC,YAAc1J,KAAKyJ,QAAQC,aAAe/B,EAEvD3H,KAAK2Z,SAAW,GAChB3Z,KAAKwK,QAAU,GACfxK,KAAKmU,YAAc,GACnBnU,KAAK4Z,YAAc,GAEnB5Z,KAAK2H,QAAUA,EACf3H,KAAKiK,MApxDT,SAA6BV,GACzB,IACI4P,EAAa5P,EAAQE,QAAQ0P,WAajC,OAAO,IAXHA,IAEOlR,EACA2H,GACA1H,EACAoJ,GACCtJ,EAGD+J,GAFArD,KAIOnF,EAASQ,GAqwDd8P,CAAoB7Z,MACjCA,KAAKkU,YAAc,IAAIN,GAAY5T,KAAMA,KAAKyJ,QAAQyK,aAEtD4F,GAAe9Z,MAAM,GAErByC,EAAKzC,KAAKyJ,QAAQ0K,YAAa,SAAS4F,GACpC,IAAI3F,EAAapU,KAAKga,IAAI,IAAKD,EAAK,GAAIA,EAAK,KAC7CA,EAAK,IAAM3F,EAAW2C,cAAcgD,EAAK,IACzCA,EAAK,IAAM3F,EAAW6C,eAAe8C,EAAK,KAC3C/Z,MA4PP,SAAS8Z,GAAevQ,EAASyQ,GAC7B,IAII1S,EAJAK,EAAU4B,EAAQ5B,QACjBA,EAAQoL,QAIbtQ,EAAK8G,EAAQE,QAAQ2P,SAAU,SAASvF,EAAO7Q,GAC3CsE,EAAOH,EAASQ,EAAQoL,MAAO/P,GAC3BgX,GACAzQ,EAAQqQ,YAAYtS,GAAQK,EAAQoL,MAAMzL,GAC1CK,EAAQoL,MAAMzL,GAAQuM,GAEtBlM,EAAQoL,MAAMzL,GAAQiC,EAAQqQ,YAAYtS,IAAS,KAGtD0S,IACDzQ,EAAQqQ,YAAc,KAzQ9B9C,GAAQlS,UAAY,CAMhBkP,IAAK,SAASrK,GAaV,OAZApI,EAAOrB,KAAKyJ,QAASA,GAGjBA,EAAQyK,aACRlU,KAAKkU,YAAYD,SAEjBxK,EAAQC,cAER1J,KAAKiK,MAAMkE,UACXnO,KAAKiK,MAAMtG,OAAS8F,EAAQC,YAC5B1J,KAAKiK,MAAMH,QAER9J,MASXia,KAAM,SAASC,GACXla,KAAKwK,QAAQ2P,QAAUD,EA5Db,EADP,GAsEP3M,UAAW,SAASiF,GAChB,IAAIhI,EAAUxK,KAAKwK,QACnB,IAAIA,EAAQ2P,QAAZ,CAOA,IAAI/F,EAFJpU,KAAKkU,YAAYQ,gBAAgBlC,GAGjC,IAAI2B,EAAcnU,KAAKmU,YAKnBiG,EAAgB5P,EAAQ4P,gBAIvBA,GAAkBA,GAz8Bb,EAy8B8BA,EAAc9E,SAClD8E,EAAgB5P,EAAQ4P,cAAgB,MAI5C,IADA,IAAI7Z,EAAI,EACDA,EAAI4T,EAAYnT,QACnBoT,EAAaD,EAAY5T,GA9FnB,IAsGFiK,EAAQ2P,SACHC,GAAiBhG,GAAcgG,IAChChG,EAAWgD,iBAAiBgD,GAGhChG,EAAWsD,QAFXtD,EAAW7G,UAAUiF,IAOpB4H,GAAoC,GAAnBhG,EAAWkB,QAC7B8E,EAAgB5P,EAAQ4P,cAAgBhG,GAE5C7T,MASRsV,IAAK,SAASzB,GACV,GAAIA,aAAsBe,GACtB,OAAOf,EAIX,IADA,IAAID,EAAcnU,KAAKmU,YACd5T,EAAI,EAAGA,EAAI4T,EAAYnT,OAAQT,IACpC,GAAI4T,EAAY5T,GAAGkJ,QAAQ4N,OAASjD,EAChC,OAAOD,EAAY5T,GAG3B,OAAO,MASXyZ,IAAK,SAAS5F,GACV,GAAI/R,EAAe+R,EAAY,MAAOpU,MAClC,OAAOA,KAIX,IAAIqa,EAAWra,KAAK6V,IAAIzB,EAAW3K,QAAQ4N,OAS3C,OARIgD,GACAra,KAAKsa,OAAOD,GAGhBra,KAAKmU,YAAYlN,KAAKmN,IACtBA,EAAW7K,QAAUvJ,MAEhBkU,YAAYD,SACVG,GAQXkG,OAAQ,SAASlG,GACb,GAAI/R,EAAe+R,EAAY,SAAUpU,MACrC,OAAOA,KAMX,GAHAoU,EAAapU,KAAK6V,IAAIzB,GAGN,CACZ,IAAID,EAAcnU,KAAKmU,YACnBrQ,EAAQ0C,EAAQ2N,EAAaC,IAElB,IAAXtQ,IACAqQ,EAAY5D,OAAOzM,EAAO,GAC1B9D,KAAKkU,YAAYD,UAIzB,OAAOjU,MASXua,GAAI,SAASC,EAAQhV,GACjB,GAAIgV,IAAWpZ,GAGXoE,IAAYpE,EAAhB,CAIA,IAAIuY,EAAW3Z,KAAK2Z,SAKpB,OAJAlX,EAAKgD,EAAS+U,GAAS,SAASnD,GAC5BsC,EAAStC,GAASsC,EAAStC,IAAU,GACrCsC,EAAStC,GAAOpQ,KAAKzB,KAElBxF,OASXya,IAAK,SAASD,EAAQhV,GAClB,GAAIgV,IAAWpZ,EAAf,CAIA,IAAIuY,EAAW3Z,KAAK2Z,SAQpB,OAPAlX,EAAKgD,EAAS+U,GAAS,SAASnD,GACvB7R,EAGDmU,EAAStC,IAAUsC,EAAStC,GAAO9G,OAAO/J,EAAQmT,EAAStC,GAAQ7R,GAAU,UAFtEmU,EAAStC,KAKjBrX,OAQXsN,KAAM,SAAS+J,EAAOqD,GAEd1a,KAAKyJ,QAAQyP,WAkEzB,SAAyB7B,EAAOqD,GAC5B,IAAIC,EAAezZ,EAAS0Z,YAAY,SACxCD,EAAaE,UAAUxD,GAAO,GAAM,IACpCsD,EAAaG,QAAUJ,GAClB/W,OAAOoX,cAAcJ,GArElBK,CAAgB3D,EAAOqD,GAI3B,IAAIf,EAAW3Z,KAAK2Z,SAAStC,IAAUrX,KAAK2Z,SAAStC,GAAO1Q,QAC5D,GAAKgT,GAAaA,EAAS3Y,OAA3B,CAIA0Z,EAAKhV,KAAO2R,EACZqD,EAAK9F,eAAiB,WAClB8F,EAAKtN,SAASwH,kBAIlB,IADA,IAAIrU,EAAI,EACDA,EAAIoZ,EAAS3Y,QAChB2Y,EAASpZ,GAAGma,GACZna,MAQR4N,QAAS,WACLnO,KAAK2H,SAAWmS,GAAe9Z,MAAM,GAErCA,KAAK2Z,SAAW,GAChB3Z,KAAKwK,QAAU,GACfxK,KAAKiK,MAAMkE,UACXnO,KAAK2H,QAAU,OAyCvBtG,EAAOuV,GAAQ,CACXnO,YAAaA,EACbwS,WAtoEa,EAuoEbvS,UAAWA,EACXC,aAAcA,EAEduM,eAAgBA,GAChBgG,YAlrCc,EAmrCdC,cAlrCgB,EAmrChBC,YAlrCc,EAmrCdC,iBAnrCc,EAorCdC,gBAlrCkB,GAmrClBC,aAlrCe,GAorCf3S,eAAgBA,EAChBC,eAAgBA,EAChBC,gBAAiBA,EACjBC,aAAcA,EACdC,eAAgBA,EAChBC,qBAAsBA,EACtBC,mBAAoBA,EACpBC,cAAeA,EAEf2N,QAASA,GACTxN,MAAOA,EACPsK,YAAaA,GAEbtC,WAAYA,GACZ5C,WAAYA,GACZkB,kBAAmBA,GACnBmC,gBAAiBA,GACjBlB,iBAAkBA,GAElBsE,WAAYA,GACZW,eAAgBA,GAChB0F,IAAKhF,GACLiF,IAAK1F,GACL2F,MAAOnF,GACPoF,MAAOzF,GACP0F,OAAQtF,GACRuF,MAAO1F,GAEPoE,GAAIjV,EACJmV,IAAK7U,EACLnD,KAAMA,EACN2B,MAAOA,EACPH,OAAQA,EACR5C,OAAQA,EACRiD,QAASA,EACTlC,OAAQA,EACR+E,SAAUA,UAKsB,IAAXtH,EAAyBA,EAA0B,oBAATE,KAAuBA,KAAO,IACtF6W,OAASA,QAMQ,IAAVlX,IAAyBA,GAAOD,QAC9CC,GAAOD,QAAUmX,GAEjB/W,EAAiB,OAAI+W,GA1kFzB,CA6kFG/W,OAAQqB,WAET,IAAIoO,EAAE,CAAC,SAAS7O,EAAQf,EAAOD,GACjC,aAEA,IAAIqc,EAAOrb,EAAQ,UAEfsb,EAAOtb,EAAQ,UAEnB,SAASub,EAAYC,EAAcC,EAAMC,EAAgBC,GACvDpc,KAAKoc,OAASA,EACdpc,KAAKqc,KAAOD,EAAOC,KAEnBrc,KAAKsc,eAAiB,IAAIH,EAC1Bnc,KAAKuc,KAAO,IAAIL,EAAKE,EAAOI,SAC5Bxc,KAAKyc,aAAe,IAAIR,EACxBjc,KAAK0c,WAAa,EAClB1c,KAAKyc,aAAaE,kBAAkB3c,KAAKuc,KAAKK,eAC9C5c,KAAKyc,aAAaI,kBAAkB7c,KAAKuc,KAAKO,eAC9C9c,KAAKyc,aAAaI,kBAAkB7c,KAAKuc,KAAKQ,aAC9C/c,KAAKyc,aAAaO,sBAAsBhd,KAAKuc,KAAKU,mBAClDjd,KAAKyc,aAAalC,GAAG,OAAQva,KAAKkd,KAAKC,KAAKnd,OAC5CA,KAAKyc,aAAalC,GAAG,UAAWva,KAAKod,QAAQD,KAAKnd,OAClDA,KAAKyc,aAAalC,GAAG,cAAeva,KAAKqd,YAAYF,KAAKnd,OAC1DA,KAAKsd,YAAc,KACnBtd,KAAKud,QACLvd,KAAKuc,KAAKiB,YAGZxB,EAAYpX,UAAU6Y,WAAa,WACjC,OAAOzd,KAAKuc,KAAK5U,SAInBqU,EAAYpX,UAAUwY,QAAU,WAC1Bpd,KAAKoc,OAAOsB,kBACd1d,KAAKsc,eAAeqB,iBAGtB3d,KAAKuc,KAAKqB,eAEV5d,KAAKud,QACLvd,KAAKuc,KAAKiB,aAIZxB,EAAYpX,UAAUyY,YAAc,WAClCrd,KAAKqd,aAAc,EACnBrd,KAAKuc,KAAKqB,gBAIZ5B,EAAYpX,UAAUiZ,iBAAmB,WACvC,OAAO7d,KAAK8d,MAAQ9d,KAAK+d,MAAQ/d,KAAKqd,aAIxCrB,EAAYpX,UAAU2Y,MAAQ,WAC5B,IAAIS,EAAgB,KAEhBhe,KAAKoc,OAAOsB,mBACdM,EAAgBhe,KAAKsc,eAAe2B,gBAIlCD,GACFhe,KAAKke,KAAO,IAAIpC,EAAKkC,EAAcE,KAAK7B,KAAM2B,EAAcE,KAAKC,OAEjEne,KAAKoe,MAAQJ,EAAcI,MAC3Bpe,KAAK8d,KAAOE,EAAcF,KAC1B9d,KAAK+d,IAAMC,EAAcD,IACzB/d,KAAKqd,YAAcW,EAAcX,cAEjCrd,KAAKke,KAAO,IAAIpC,EAAK9b,KAAKqc,MAC1Brc,KAAKoe,MAAQ,EACbpe,KAAK8d,MAAO,EACZ9d,KAAK+d,KAAM,EACX/d,KAAKqd,aAAc,EAEnBrd,KAAKqe,iBAIPre,KAAKse,WAIPtC,EAAYpX,UAAUyZ,cAAgB,WACpC,IAAK,IAAI9d,EAAI,EAAGA,EAAIP,KAAK0c,WAAYnc,IACnCP,KAAKue,iBAKTvC,EAAYpX,UAAU2Z,cAAgB,WACpC,GAAIve,KAAKke,KAAKM,iBAAkB,CAC9B,IAAI3K,EAAQlS,KAAK8c,SAAW,GAAM,EAAI,EAClCC,EAAO,IAAI3C,EAAK/b,KAAKke,KAAKS,sBAAuB9K,GACrD7T,KAAKke,KAAKU,WAAWF,KAKzB1C,EAAYpX,UAAU0Z,QAAU,WAC1Bte,KAAKsc,eAAeuC,eAAiB7e,KAAKoe,OAC5Cpe,KAAKsc,eAAewC,aAAa9e,KAAKoe,OAIpCpe,KAAKoc,OAAOsB,mBACV1d,KAAK8d,KACP9d,KAAKsc,eAAeqB,iBAEpB3d,KAAKsc,eAAeyC,aAAa/e,KAAKgf,cAI1Chf,KAAKuc,KAAK+B,QAAQte,KAAKke,KAAM,CAC3BE,MAAOpe,KAAKoe,MACZN,KAAM9d,KAAK8d,KACXC,IAAK/d,KAAK+d,IACVkB,UAAWjf,KAAKsc,eAAeuC,eAC/BK,WAAYlf,KAAK6d,sBAKrB7B,EAAYpX,UAAUoa,UAAY,WAChC,MAAO,CACLd,KAAMle,KAAKke,KAAKc,YAChBZ,MAAOpe,KAAKoe,MACZN,KAAM9d,KAAK8d,KACXC,IAAK/d,KAAK+d,IACVV,YAAard,KAAKqd,cAKtBrB,EAAYpX,UAAUua,aAAe,WACnCnf,KAAKke,KAAKkB,SAAS,SAAU1T,EAAGE,EAAG8S,GAC7BA,IACFA,EAAKW,WAAa,KAClBX,EAAKY,mBAMXtD,EAAYpX,UAAU2a,SAAW,SAAUb,EAAMc,GAC/Cxf,KAAKke,KAAKC,MAAMO,EAAKhT,GAAGgT,EAAK9S,GAAK,MAClC5L,KAAKke,KAAKC,MAAMqB,EAAK9T,GAAG8T,EAAK5T,GAAK8S,GAC7Be,eAAeD,IAItBxD,EAAYpX,UAAUsY,KAAO,SAAUnQ,GAErC,IAAIhN,EAAOC,KACX,IAAIA,KAAK6d,mBAAT,CAEA,IAAI2B,EAAMd,EACNgB,EAAS1f,KAAK2f,UAAU5S,GACxB6S,EAAa5f,KAAK6f,gBAAgBH,GAClCI,GAAQ,EAEZ9f,KAAKmf,eAELS,EAAWlU,EAAE9I,QAAQ,SAAU8I,GAC7BkU,EAAWhU,EAAEhJ,QAAQ,SAAUgJ,GAO7B,GANA4T,EAAO,CACL9T,EAAGA,EACHE,EAAGA,GAEL8S,EAAO3e,EAAKme,KAAK6B,YAAYP,GAEnB,CACR,IAAIQ,EAAYjgB,EAAKkgB,qBAAqBT,EAAME,GAC5CQ,EAAOngB,EAAKme,KAAK6B,YAAYC,EAAUE,MAE3C,GAAIA,GAAQA,EAAKrM,QAAU6K,EAAK7K,QAAUqM,EAAKb,WAAY,CACzD,IAAIc,EAAS,IAAIpE,EAAKiE,EAAUE,KAAmB,EAAbxB,EAAK7K,OAC3CsM,EAAOd,WAAa,CAACX,EAAMwB,GAC3BngB,EAAKme,KAAKU,WAAWuB,GACrBpgB,EAAKme,KAAKkC,WAAW1B,GAErBA,EAAKe,eAAeO,EAAUE,MAE9BngB,EAAKqe,OAAS+B,EAAOtM,MAEA,OAAjBsM,EAAOtM,QAAgB9T,EAAKge,KAAM,QAEtChe,EAAKwf,SAASb,EAAMsB,EAAUK,UAG3BtgB,EAAKugB,eAAed,EAAMd,KAC7BoB,GAAQ,QAMZA,IACF9f,KAAKue,gBAEAve,KAAKugB,mBACRvgB,KAAK8d,MAAO,GAGd9d,KAAKse,aAKTtC,EAAYpX,UAAU+a,UAAY,SAAU5S,GAwB1C,MAtBU,CACRyT,EAAG,CACD9U,EAAG,EACHE,GAAI,GAGN3K,EAAG,CACDyK,EAAG,EACHE,EAAG,GAGL0D,EAAG,CACD5D,EAAG,EACHE,EAAG,GAGL2D,EAAG,CACD7D,GAAI,EACJE,EAAG,IAIImB,IAIbiP,EAAYpX,UAAUib,gBAAkB,SAAUH,GAMhD,IALA,IAAIE,EAAa,CACflU,EAAG,GACHE,EAAG,IAGI6U,EAAM,EAAGA,EAAMzgB,KAAKqc,KAAMoE,IACjCb,EAAWlU,EAAEzE,KAAKwZ,GAClBb,EAAWhU,EAAE3E,KAAKwZ,GAMpB,OAFiB,IAAbf,EAAOhU,IAASkU,EAAWlU,EAAIkU,EAAWlU,EAAEgV,WAC/B,IAAbhB,EAAO9T,IAASgU,EAAWhU,EAAIgU,EAAWhU,EAAE8U,WACzCd,GAGT5D,EAAYpX,UAAUqb,qBAAuB,SAAUT,EAAME,GAG3D,IAFA,IAAIiB,EAIFnB,EAAO,CACL9T,GAFFiV,EAAWnB,GAEG9T,EAAIgU,EAAOhU,EACvBE,EAAG+U,EAAS/U,EAAI8T,EAAO9T,GAElB5L,KAAKke,KAAK0C,aAAapB,IAASxf,KAAKke,KAAK2C,cAAcrB,KAEjE,MAAO,CACLa,SAAUM,EACVT,KAAMV,IAKVxD,EAAYpX,UAAU2b,eAAiB,WACrC,OAAOvgB,KAAKke,KAAKM,kBAAoBxe,KAAK8gB,wBAI5C9E,EAAYpX,UAAUkc,qBAAuB,WAI3C,IAHA,IACIpC,EAEKhT,EAAI,EAAGA,EAAI1L,KAAKqc,KAAM3Q,IAC7B,IAAK,IAAIE,EAAI,EAAGA,EAAI5L,KAAKqc,KAAMzQ,IAM7B,GALA8S,EAAO1e,KAAKke,KAAK6B,YAAY,CAC3BrU,EAAGA,EACHE,EAAGA,IAIH,IAAK,IAAImB,EAAY,EAAGA,EAAY,EAAGA,IAAa,CAClD,IAAI2S,EAZD1f,KAYe2f,UAAU5S,GACxByS,EAAO,CACT9T,EAAGA,EAAIgU,EAAOhU,EACdE,EAAGA,EAAI8T,EAAO9T,GAEZmV,EAjBD/gB,KAiBcke,KAAK6B,YAAYP,GAElC,GAAIuB,GAASA,EAAMlN,QAAU6K,EAAK7K,MAChC,OAAO,EAOjB,OAAO,GAGTmI,EAAYpX,UAAU0b,eAAiB,SAAUU,EAAOC,GACtD,OAAOD,EAAMtV,IAAMuV,EAAOvV,GAAKsV,EAAMpV,IAAMqV,EAAOrV,GAGpDoQ,EAAYpX,UAAUsc,MAAQ,WAC5BlhB,KAAKuc,KAAK2E,SAGZlF,EAAYpX,UAAUuc,OAAS,WAC7BnhB,KAAKuc,KAAK4E,UAGZzhB,EAAOD,QAAUuc,GAEf,CAACoF,SAAS,EAAEC,SAAS,KAAK9R,EAAE,CAAC,SAAS9O,EAAQf,EAAOD,GACvD,aAEA,IAAIsc,EAAOtb,EAAQ,UAEnB,SAASqb,EAAKO,EAAM2B,GAClBhe,KAAKqc,KAAOA,EACZrc,KAAKme,MAAQH,EAAgBhe,KAAKshB,UAAUtD,GAAiBhe,KAAKuhB,QAIpEzF,EAAKlX,UAAU2c,MAAQ,WAGrB,IAFA,IAAIpD,EAAQ,GAEHzS,EAAI,EAAGA,EAAI1L,KAAKqc,KAAM3Q,IAG7B,IAFA,IAAI8V,EAAMrD,EAAMzS,GAAK,GAEZE,EAAI,EAAGA,EAAI5L,KAAKqc,KAAMzQ,IAC7B4V,EAAIva,KAAK,MAIb,OAAOkX,GAGTrC,EAAKlX,UAAU0c,UAAY,SAAUhM,GAGnC,IAFA,IAAI6I,EAAQ,GAEHzS,EAAI,EAAGA,EAAI1L,KAAKqc,KAAM3Q,IAG7B,IAFA,IAAI8V,EAAMrD,EAAMzS,GAAK,GAEZE,EAAI,EAAGA,EAAI5L,KAAKqc,KAAMzQ,IAAK,CAClC,IAAI8S,EAAOpJ,EAAM5J,GAAGE,GACpB4V,EAAIva,KAAKyX,EAAO,IAAI3C,EAAK2C,EAAK+C,SAAU/C,EAAK7K,OAAS,MAI1D,OAAOsK,GAITrC,EAAKlX,UAAU+Z,oBAAsB,WACnC,IAAIR,EAAQne,KAAK0hB,iBAEjB,GAAIvD,EAAMnd,OACR,OAAOmd,EAAMxc,KAAKggB,MAAMhgB,KAAK8c,SAAWN,EAAMnd,UAIlD8a,EAAKlX,UAAU8c,eAAiB,WAC9B,IAAIvD,EAAQ,GASZ,OARAne,KAAKof,SAAS,SAAU1T,EAAGE,EAAG8S,GACvBA,GACHP,EAAMlX,KAAK,CACTyE,EAAGA,EACHE,EAAGA,MAIFuS,GAITrC,EAAKlX,UAAUwa,SAAW,SAAU5V,GAClC,IAAK,IAAIkC,EAAI,EAAGA,EAAI1L,KAAKqc,KAAM3Q,IAC7B,IAAK,IAAIE,EAAI,EAAGA,EAAI5L,KAAKqc,KAAMzQ,IAC7BpC,EAASkC,EAAGE,EAAG5L,KAAKme,MAAMzS,GAAGE,KAMnCkQ,EAAKlX,UAAU4Z,eAAiB,WAC9B,QAASxe,KAAK0hB,iBAAiB1gB,QAIjC8a,EAAKlX,UAAUic,cAAgB,SAAUrB,GACvC,OAAQxf,KAAK4hB,aAAapC,IAG5B1D,EAAKlX,UAAUgd,aAAe,SAAUpC,GACtC,QAASxf,KAAK+f,YAAYP,IAG5B1D,EAAKlX,UAAUmb,YAAc,SAAUP,GACrC,OAAIxf,KAAK4gB,aAAapB,GACbxf,KAAKme,MAAMqB,EAAK9T,GAAG8T,EAAK5T,GAExB,MAKXkQ,EAAKlX,UAAUga,WAAa,SAAUF,GACpC1e,KAAKme,MAAMO,EAAKhT,GAAGgT,EAAK9S,GAAK8S,GAG/B5C,EAAKlX,UAAUwb,WAAa,SAAU1B,GACpC1e,KAAKme,MAAMO,EAAKhT,GAAGgT,EAAK9S,GAAK,MAG/BkQ,EAAKlX,UAAUgc,aAAe,SAAUa,GACtC,OAAqB,GAAdA,EAAS/V,GAAU+V,EAAS/V,EAAI1L,KAAKqc,MAAsB,GAAdoF,EAAS7V,GAAU6V,EAAS7V,EAAI5L,KAAKqc,MAG3FP,EAAKlX,UAAUoa,UAAY,WAGzB,IAFA,IAAI6C,EAAY,GAEPnW,EAAI,EAAGA,EAAI1L,KAAKqc,KAAM3Q,IAG7B,IAFA,IAAI8V,EAAMK,EAAUnW,GAAK,GAEhBE,EAAI,EAAGA,EAAI5L,KAAKqc,KAAMzQ,IAC7B4V,EAAIva,KAAKjH,KAAKme,MAAMzS,GAAGE,GAAK5L,KAAKme,MAAMzS,GAAGE,GAAGoT,YAAc,MAI/D,MAAO,CACL3C,KAAMrc,KAAKqc,KACX8B,MAAO0D,IAIXniB,EAAOD,QAAUqc,GAEf,CAACuF,SAAS,KAAK7R,EAAE,CAAC,SAAS/O,EAAQf,EAAOD,GAC5C,aAEA,SAASqiB,EAAStF,GAChBxc,KAAKwc,QAAUA,EACfxc,KAAK2H,QAAUzG,SAASM,cAAc,OACtCxB,KAAK2H,QAAQoa,UAAU/H,IAAI,YAC3Bha,KAAKgiB,UAAY9gB,SAASM,cAAc,OACxCxB,KAAKgiB,UAAUD,UAAU/H,IAAI,aAC7Bha,KAAK2H,QAAQsa,OAAOjiB,KAAKgiB,WACzBhiB,KAAK4c,cAAgB1b,SAASM,cAAc,OAC5CxB,KAAK4c,cAAcmF,UAAU/H,IAAI,kBACjCha,KAAKgiB,UAAUC,OAAOjiB,KAAK4c,eAE3B5c,KAAKkiB,iBAAmBhhB,SAASM,cAAc,OAC/CxB,KAAKkiB,iBAAiBH,UAAU/H,IAAI,gBACpCha,KAAKmiB,0BAA4BjhB,SAASM,cAAc,KACxDxB,KAAKkiB,iBAAiBD,OAAOjiB,KAAKmiB,2BAClCniB,KAAK4c,cAAcqF,OAAOjiB,KAAKkiB,kBAE/B,IAAIE,EAAQlhB,SAASM,cAAc,OACnC4gB,EAAML,UAAU/H,IAAI,SACpBha,KAAKkiB,iBAAiBD,OAAOG,GAE7BpiB,KAAKid,kBAAoB/b,SAASM,cAAc,KAChDxB,KAAKid,kBAAkB8E,UAAU/H,IAAI,uBACrCha,KAAKid,kBAAkBoF,YAAcriB,KAAKwc,QAAQ8F,WAClDF,EAAMH,OAAOjiB,KAAKid,mBAElBjd,KAAK+c,YAAc7b,SAASM,cAAc,KAC1CxB,KAAK+c,YAAYgF,UAAU/H,IAAI,gBAC/Bha,KAAK+c,YAAYsF,YAAcriB,KAAKwc,QAAQ+F,UAC5CH,EAAMH,OAAOjiB,KAAK+c,aAClB/c,KAAKkiB,iBAAiBD,OAAOG,GAE7B,IACII,EAAgBthB,SAASM,cAAc,OAC3CghB,EAAcT,UAAU/H,IAAI,kBAE5B,IAAK,IAAIzZ,EAAI,EAJF,IAIKA,EAAYA,GAAK,EAAG,CAClC,IAAIihB,EAAMtgB,SAASM,cAAc,OACjCggB,EAAIO,UAAU/H,IAAI,YAClBwI,EAAcP,OAAOT,GAErB,IAAK,IAAIiB,EAAI,EATJ,IASOA,EAAYA,GAAK,EAAG,CAClC,IAAIjD,EAAOte,SAASM,cAAc,OAClCge,EAAKuC,UAAU/H,IAAI,aACnBwH,EAAIS,OAAOzC,IAIfxf,KAAK4c,cAAcqF,OAAOO,GAE1BxiB,KAAK0iB,cAAgBxhB,SAASM,cAAc,OAC5CxB,KAAK0iB,cAAcX,UAAU/H,IAAI,kBACjCha,KAAK4c,cAAcqF,OAAOjiB,KAAK0iB,eAE/B1iB,KAAK8c,cAAgB5b,SAASM,cAAc,KAC5CxB,KAAK8c,cAAciF,UAAU/H,IAAI,kBACjCha,KAAK8c,cAAcuF,YAAcriB,KAAKwc,QAAQmG,SAC9C3iB,KAAKgiB,UAAUC,OAAOjiB,KAAK8c,eAE3B,IAAI8F,EAAe1hB,SAASM,cAAc,OAC1CohB,EAAab,UAAU/H,IAAI,iBAC3B4I,EAAab,UAAU/H,IAAI,uBAC3B,IAAI6I,EAAa3hB,SAASM,cAAc,OACxCqhB,EAAWd,UAAU/H,IAAI,SACzB6I,EAAWR,YAAcriB,KAAKwc,QAAQsG,MACtCF,EAAaX,OAAOY,GACpB7iB,KAAK+iB,eAAiB7hB,SAASM,cAAc,OAC7CxB,KAAK+iB,eAAehB,UAAU/H,IAAI,mBAClCha,KAAK+iB,eAAeV,YAAc,IAClCO,EAAaX,OAAOjiB,KAAK+iB,gBACzB/iB,KAAKgiB,UAAUC,OAAOW,GAEtB,IAAII,EAAiB9hB,SAASM,cAAc,OAC5CwhB,EAAejB,UAAU/H,IAAI,iBAC7BgJ,EAAejB,UAAU/H,IAAI,sBAC7B,IAAIiJ,EAAe/hB,SAASM,cAAc,OAC1CyhB,EAAalB,UAAU/H,IAAI,SAC3BiJ,EAAaZ,YAAcriB,KAAKwc,QAAQ0G,WACxCF,EAAef,OAAOgB,GACtBjjB,KAAKmjB,cAAgBjiB,SAASM,cAAc,OAC5CxB,KAAKmjB,cAAcpB,UAAU/H,IAAI,kBACjCha,KAAKmjB,cAAcd,YAAc,IACjCW,EAAef,OAAOjiB,KAAKmjB,eAC3BnjB,KAAKgiB,UAAUC,OAAOe,GAEtBhjB,KAAKojB,SAAWliB,SAASM,cAAc,OACvCxB,KAAKojB,SAASrB,UAAU/H,IAAI,gBAC5Bha,KAAKojB,SAASf,YAAcriB,KAAKwc,QAAQ6G,UACzCrjB,KAAKgiB,UAAUC,OAAOjiB,KAAKojB,UAE3BpjB,KAAKsjB,SAAWpiB,SAASM,cAAc,OACvCxB,KAAKsjB,SAASvB,UAAU/H,IAAI,gBAC5Bha,KAAKgiB,UAAUC,OAAOjiB,KAAKsjB,UAC3BtjB,KAAKsd,YAAc,KACnBtd,KAAKoe,MAAQ,EAGf0D,EAASld,UAAU0Z,QAAU,SAAUJ,EAAMqF,GAC3C,IAAIxjB,EAAOC,KACXH,OAAO2jB,sBAAsB,WAC3BzjB,EAAK0jB,eAAe1jB,EAAK2iB,eACzBxE,EAAKC,MAAMvb,QAAQ,SAAU8gB,GAC3BA,EAAO9gB,QAAQ,SAAU4c,GACnBA,GACFzf,EAAK4jB,QAAQnE,OAInBzf,EAAK6jB,YAAYL,EAASnF,OAC1Bre,EAAK8jB,gBAAgBN,EAAStE,WAE1BsE,EAASrE,aACPqE,EAASzF,KACX/d,EAAKkD,SAAQ,GACJsgB,EAASxF,KAClBhe,EAAKkD,SAAQ,OAOrB6e,EAASld,UAAUgZ,aAAe,WAChC5d,KAAK8jB,gBAGPhC,EAASld,UAAU6e,eAAiB,SAAUzB,GAC5C,KAAOA,EAAU+B,YACf/B,EAAUgC,YAAYhC,EAAU+B,aAIpCjC,EAASld,UAAU+e,QAAU,SAAUjF,GACrC,IAAI3e,EAAOC,KACPikB,EAAU/iB,SAASM,cAAc,OACjC0iB,EAAQhjB,SAASM,cAAc,OAC/BigB,EAAW/C,EAAKyF,kBAAoB,CACtCzY,EAAGgT,EAAKhT,EACRE,EAAG8S,EAAK9S,GAENwY,EAAgBpkB,KAAKokB,cAAc3C,GAEnC4C,EAAU,CAAC,OAAQ,QAAU3F,EAAK7K,MAAOuQ,GAC5B,KAAb1F,EAAK7K,OAAcwQ,EAAQpd,KAAK,cACpCjH,KAAKskB,aAAaL,EAASI,GAC3BH,EAAMnC,UAAU/H,IAAI,cACpBkK,EAAM7B,YAAc3D,EAAK7K,MAErB6K,EAAKyF,iBAEPtkB,OAAO2jB,sBAAsB,WAC3Ba,EAAQ,GAAKtkB,EAAKqkB,cAAc,CAC9B1Y,EAAGgT,EAAKhT,EACRE,EAAG8S,EAAK9S,IAEV7L,EAAKukB,aAAaL,EAASI,KAEpB3F,EAAKW,YACdgF,EAAQpd,KAAK,eACbjH,KAAKskB,aAAaL,EAASI,GAE3B3F,EAAKW,WAAWzc,QAAQ,SAAUud,GAChCpgB,EAAK4jB,QAAQxD,OAGfkE,EAAQpd,KAAK,YACbjH,KAAKskB,aAAaL,EAASI,IAI7BJ,EAAQM,YAAYL,GAEpBlkB,KAAK0iB,cAAc6B,YAAYN,IAGjCnC,EAASld,UAAU0f,aAAe,SAAU3c,EAAS0c,GACnD1c,EAAQ6c,aAAa,QAASH,EAAQ5P,KAAK,OAG7CqN,EAASld,UAAU6f,kBAAoB,SAAUhD,GAC/C,MAAO,CACL/V,EAAG+V,EAAS/V,EAAI,EAChBE,EAAG6V,EAAS7V,EAAI,IAIpBkW,EAASld,UAAUwf,cAAgB,SAAU3C,GAE3C,MAAO,kBADPA,EAAWzhB,KAAKykB,kBAAkBhD,IACC/V,EAAI,IAAM+V,EAAS7V,GAGxDkW,EAASld,UAAUgf,YAAc,SAAUxF,GACzCpe,KAAKyjB,eAAezjB,KAAK+iB,gBACzB,IAAI2B,EAAatG,EAAQpe,KAAKoe,MAI9B,GAHApe,KAAKoe,MAAQA,EACbpe,KAAK+iB,eAAeV,YAAcriB,KAAKoe,MAEtB,EAAbsG,EAAgB,CAClB,IAAIC,EAAWzjB,SAASM,cAAc,OACtCmjB,EAAS5C,UAAU/H,IAAI,kBACvB2K,EAAStC,YAAc,IAAMqC,EAC7B1kB,KAAK+iB,eAAewB,YAAYI,KAIpC7C,EAASld,UAAUif,gBAAkB,SAAU5E,GAC7Cjf,KAAKmjB,cAAcd,YAAcpD,GAGnC6C,EAASld,UAAU3B,QAAU,SAAU8a,GACrC,IAAIrY,EAAOqY,EAAM,WAAa,YAC1B9a,EAAU8a,EAAM/d,KAAKwc,QAAQoI,QAAU5kB,KAAKwc,QAAQqI,UACxD7kB,KAAKkiB,iBAAiBH,UAAU/H,IAAItU,GACpC1F,KAAKmiB,0BAA0BE,YAAcpf,GAG/C6e,EAASld,UAAUkf,aAAe,WAEhC9jB,KAAKkiB,iBAAiBH,UAAUzH,OAAO,YACvCta,KAAKkiB,iBAAiBH,UAAUzH,OAAO,cAGzCwH,EAASld,UAAUkgB,SAAW,WAC5BjlB,OAAOsC,WAAW,WAChBnC,KAAKsjB,SAASvB,UAAU/H,IAAI,SAC5Bha,KAAKojB,SAASrB,UAAU/H,IAAI,UAC5BmD,KAAKnd,MAAO,IAGhB8hB,EAASld,UAAUmgB,SAAW,WACH,OAArB/kB,KAAKsd,cACPzd,OAAO2Y,aAAaxY,KAAKsd,aACzBtd,KAAKsd,YAAc,MAGrBtd,KAAKsjB,SAASvB,UAAUzH,OAAO,SAC/Bta,KAAKojB,SAASrB,UAAUzH,OAAO,UAGjCwH,EAASld,UAAU4Y,UAAY,WAC7Bxd,KAAK+kB,WACL/kB,KAAKsd,YAAczd,OAAOsC,WAAWnC,KAAK+kB,SAAS5H,KAAKnd,MAAO,KAC/DA,KAAK8kB,YAGPhD,EAASld,UAAUsc,MAAQ,WACzBlhB,KAAK2H,QAAQoa,UAAU/H,IAAI,WAG7B8H,EAASld,UAAUuc,OAAS,WAC1BnhB,KAAK2H,QAAQoa,UAAUzH,OAAO,WAGhC5a,EAAOD,QAAUqiB,GAEf,IAAIrS,EAAE,CAAC,SAAShP,EAAQf,EAAOD,GACjC,aAEA,IAAImX,EAASnW,EAAQ,YAErB,SAASwb,IACPjc,KAAKwa,OAAS,GAGhByB,EAAarX,UAAU2V,GAAK,SAAUlD,EAAO7N,GACtCxJ,KAAKwa,OAAOnD,KACfrX,KAAKwa,OAAOnD,GAAS,IAGvBrX,KAAKwa,OAAOnD,GAAOpQ,KAAKuC,IAG1ByS,EAAarX,UAAU0I,KAAO,SAAU+J,EAAOqD,GAC7C,IAAIsK,EAAYhlB,KAAKwa,OAAOnD,GAExB2N,GACFA,EAAUpiB,QAAQ,SAAU4G,GAC1BA,EAASkR,MAKfuB,EAAarX,UAAUqgB,aAAe,WACpC,IAAIllB,EAAOC,KACPklB,EAAM,CACRC,GAAI,EAEJC,GAAI,EAEJC,GAAI,EAEJC,GAAI,EAEJC,GAAI,EAEJC,GAAI,EAEJC,GAAI,EAEJC,GAAI,EAEJC,GAAI,EAEJC,GAAI,EAEJC,GAAI,EAEJC,GAAI,GAIN5kB,SAASyE,iBAAiB,UAAW,SAAU0R,GAC7C,IAAI0O,EAAY1O,EAAM2O,QAAU3O,EAAM4O,SAAW5O,EAAM6O,SAAW7O,EAAM8O,SACpEC,EAASlB,EAAI7N,EAAMxI,OAElBkX,QACY3kB,IAAXglB,IACF/O,EAAMzC,iBACN7U,EAAKuN,KAAK,OAAQ8Y,IAKjBL,GAA6B,KAAhB1O,EAAMxI,OACtB9O,EAAKqd,QAAQrc,KAAKhB,EAAMsX,MAK9B4E,EAAarX,UAAU+X,kBAAoB,SAAUC,GACnD,IAAI7c,EAAOC,KACPqmB,EAAK,IAAIzP,EAAOE,QAAQ8F,GAC5ByJ,EAAGrM,IAAI,IAAIpD,EAAO8E,OAClB2K,EAAG9L,GAAG,aAAc,WAClB,OAAOxa,EAAKuN,KAAK,OAAQ,KAE3B+Y,EAAG9L,GAAG,YAAa,WACjB,OAAOxa,EAAKuN,KAAK,OAAQ,KAE3B+Y,EAAG9L,GAAG,UAAW,WACf,OAAOxa,EAAKuN,KAAK,OAAQ,KAE3B+Y,EAAG9L,GAAG,YAAa,WACjB,OAAOxa,EAAKuN,KAAK,OAAQ,MAI7B2O,EAAarX,UAAUiY,kBAAoB,SAAUjO,GACnD5O,KAAKsmB,gBAAgB1X,EAAQ5O,KAAKod,UAGpCnB,EAAarX,UAAUoY,sBAAwB,SAAUpO,GACvD5O,KAAKsmB,gBAAgB1X,EAAQ5O,KAAKqd,cAGpCpB,EAAarX,UAAUwY,QAAU,SAAU/F,GACzCA,EAAMzC,iBACN5U,KAAKsN,KAAK,YAGZ2O,EAAarX,UAAUyY,YAAc,SAAUhG,GAC7CA,EAAMzC,iBACN5U,KAAKsN,KAAK,gBAGZ2O,EAAarX,UAAU0hB,gBAAkB,SAAU1X,EAAQ5M,GACzD4M,EAAOjJ,iBAAiB,QAAS3D,EAAGmb,KAAKnd,OACzC4O,EAAOjJ,iBAAiB3F,KAAKumB,cAAevkB,EAAGmb,KAAKnd,QAGtDN,EAAOD,QAAUwc,GAEf,CAACuK,SAAW,IAAIC,EAAE,CAAC,SAAShmB,EAAQf,EAAOD,GAC7C,aA0BA,SAASinB,IACP1mB,KAAK2mB,aAAe,+BACpB3mB,KAAK4mB,iBAAmB,mCACxB5mB,KAAK6mB,aAAe,+BACpB,IAAIC,EAAY9mB,KAAK+mB,wBACrB/mB,KAAKgnB,QAAUF,EAAYjnB,OAAOonB,aAAepnB,OAAOqnB,UAAUC,SAASC,iBA7BpDhmB,IAArBvB,OAAOqnB,YACTrnB,OAAOqnB,UAAY,SAGa9lB,IAA9BvB,OAAOqnB,UAAUC,WACnBtnB,OAAOqnB,UAAUC,SAAW,IAG9BtnB,OAAOqnB,UAAUC,SAASC,YAAc,CACtCC,MAAO,GACPC,QAAS,SAAiBjS,EAAIpQ,GAC5B,OAAOjF,KAAKqnB,MAAMhS,GAAMkS,OAAOtiB,IAEjCuiB,QAAS,SAAiBnS,GACxB,OAAOrV,KAAKqnB,MAAMxkB,eAAewS,GAAMrV,KAAKqnB,MAAMhS,QAAMjU,GAE1DqmB,WAAY,SAAoBpS,GAC9B,cAAcrV,KAAKqnB,MAAMhS,IAE3BqS,MAAO,WACL,OAAO1nB,KAAKqnB,MAAQ,KAYxBX,EAAoB9hB,UAAUmiB,sBAAwB,WAGpD,IACE,IAAIC,EAAUnnB,OAAOonB,aAGrB,OAFAD,EAAQM,QAJI,OAIa,KACzBN,EAAQS,WALI,SAML,EACP,MAAOE,GACP,OAAO,IAIXjB,EAAoB9hB,UAAUgjB,eAAiB,WAGlC,SAAPC,EAAqBC,GACvB,OAAOA,EAAOC,WAAWC,SAAS,EAAG,KAHvC,IAAInmB,EAAM,IAAIC,KAMd,MAAO,CAACD,EAAIomB,cAAeJ,EAAKhmB,EAAIqmB,WAAa,GAAIL,EAAKhmB,EAAIsmB,YAAY1T,KAAK,MAIjFiS,EAAoB9hB,UAAUia,aAAe,WAG3C,OAFe7e,KAAKgnB,QAAQQ,QAAQxnB,KAAK4mB,oBAExB5mB,KAAK4nB,kBACb5nB,KAAKgnB,QAAQQ,QAAQxnB,KAAK2mB,eAG5B,GAGTD,EAAoB9hB,UAAUka,aAAe,SAAUV,GACrDpe,KAAKgnB,QAAQM,QAAQtnB,KAAK4mB,iBAAkB5mB,KAAK4nB,kBACjD5nB,KAAKgnB,QAAQM,QAAQtnB,KAAK2mB,aAAcvI,IAI1CsI,EAAoB9hB,UAAUqZ,aAAe,WAC3C,IAAImK,EAAYpoB,KAAKgnB,QAAQQ,QAAQxnB,KAAK6mB,cAC1C,OAAOuB,EAAYC,KAAKC,MAAMF,GAAa,MAG7C1B,EAAoB9hB,UAAUma,aAAe,SAAUwJ,GACrDvoB,KAAKgnB,QAAQM,QAAQtnB,KAAK6mB,aAAcwB,KAAKG,UAAUD,KAGzD7B,EAAoB9hB,UAAU+Y,eAAiB,WAC7C3d,KAAKgnB,QAAQS,WAAWznB,KAAK6mB,eAG/BnnB,EAAOD,QAAUinB,GAEf,IAAI+B,EAAE,CAAC,SAAShoB,EAAQf,EAAOD,GACjC,aAIA,SAASipB,EAAkB/kB,EAAQiK,GAAS,IAAK,IAAIrN,EAAI,EAAGA,EAAIqN,EAAM5M,OAAQT,IAAK,CAAE,IAAIooB,EAAa/a,EAAMrN,GAAIooB,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMplB,OAAOqlB,eAAeplB,EAAQglB,EAAW9hB,IAAK8hB,IAI7SloB,EAAQ,6BAERA,EAAQ,kCAERA,EAAQ,kCAER,IAAIub,EAAcvb,EAAQ,kBAEtBwb,EAAexb,EAAQ,mBAEvBqhB,EAAWrhB,EAAQ,eAEnBimB,EAAsBjmB,EAAQ,2BAE9B+b,EAAU/b,EAAQ,qBAElBR,EAEJ,WACE,SAASA,KAzBX,SAAyB+oB,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIrlB,UAAU,qCA0B5GslB,CAAgBlpB,KAAMC,GAEtB,IAAImc,EAAS,CACXC,KAAM,EACNqB,kBAAkB,EAClBlB,QAASA,GAEXxc,KAAKmpB,YAAc,IAAInN,EAAYC,EAAc6F,EAAU4E,EAAqBtK,GAyBlF,OAtDF,SAAsB6M,EAAaG,EAAYC,GAAmBD,GAAYV,EAAkBO,EAAYrkB,UAAWwkB,GAAiBC,GAAaX,EAAkBO,EAAaI,GAgClLC,CAAarpB,EAAU,CAAC,CACtB4G,IAAK,QACLgN,MAAO,WACL7T,KAAKmpB,YAAYjI,UAElB,CACDra,IAAK,SACLgN,MAAO,WACL7T,KAAKmpB,YAAYhI,WAElB,CACDta,IAAK,QACLgN,MAAO,WACL7T,KAAKmpB,YAAY/L,YAElB,CACDvW,IAAK,aACLgP,IAAK,WACH,OAAO7V,KAAKmpB,YAAY1L,iBAIrBxd,EAlCT,GAqCAP,EAAOD,QAAUQ,GAEf,CAACspB,iBAAiB,EAAEC,cAAc,EAAEC,kBAAkB,EAAEC,0BAA0B,EAAEC,iCAAiC,EAAEC,4BAA4B,EAAEC,iCAAiC,GAAGC,oBAAoB,KAAKC,EAAE,CAAC,SAAStpB,EAAQf,EAAOD,GAC/O,cAEA,WAIE,IAHA,IAAIuqB,EAAW,EACXC,EAAU,CAAC,SAAU,OAEhBve,EAAI,EAAGA,EAAIue,EAAQjpB,SAAWnB,OAAO2jB,wBAAyB9X,EACrE7L,OAAO2jB,sBAAwB3jB,OAAOoqB,EAAQve,GAAK,yBACnD7L,OAAOqqB,qBAAuBrqB,OAAOoqB,EAAQve,GAAK,yBAA2B7L,OAAOoqB,EAAQve,GAAK,+BAG9F7L,OAAO2jB,wBACV3jB,OAAO2jB,sBAAwB,SAAUha,GACvC,IAAI2gB,GAAW,IAAIroB,MAAOsoB,UACtBC,EAAa1oB,KAAK2oB,IAAI,EAAG,IAAMH,EAAWH,IAC1C3U,EAAKxV,OAAOsC,WAAW,WACzBqH,EAAS2gB,EAAWE,IACnBA,GAEH,OADAL,EAAWG,EAAWE,EACfhV,IAINxV,OAAOqqB,uBACVrqB,OAAOqqB,qBAAuB,SAAU7U,GACtCmD,aAAanD,KAvBnB,IA4BE,IAAIkV,EAAE,CAAC,SAAS9pB,EAAQf,EAAOD,GACjC,aAEA+qB,SAAS5lB,UAAUuY,KAAOqN,SAAS5lB,UAAUuY,MAAQ,SAAUxZ,GAC7D,IAAI5D,EAAOC,KACX,OAAO,SAAUkF,GACTA,aAAgB3C,QACpB2C,EAAO,CAACA,IAGVnF,EAAKyD,MAAMG,EAAQuB,MAIrB,IAAIulB,GAAG,CAAC,SAAShqB,EAAQf,EAAOD,GAClC,cAEA,WACE,UAA8B,IAAnBI,OAAO6qB,SAA2B,cAAexpB,SAASypB,iBAArE,CAIA,IAqD6BjoB,EAAK4E,EAAMsjB,EArDpChmB,EAAYrC,MAAMqC,UAClBqC,EAAOrC,EAAUqC,KACjBsJ,EAAS3L,EAAU2L,OACnBkE,EAAO7P,EAAU6P,KAarBoW,EAAajmB,UAAY,CACvBoV,IAAK,SAAa8Q,GACZ9qB,KAAK+qB,SAASD,KAClB7jB,EAAKlG,KAAKf,KAAM8qB,GAChB9qB,KAAKgrB,GAAGC,UAAYjrB,KAAK+nB,aAE3BgD,SAAU,SAAkBD,GAC1B,OAA4C,GAArC9qB,KAAKgrB,GAAGC,UAAU5kB,QAAQykB,IAEnC/Q,KAAM,SAAcjW,GAClB,OAAO9D,KAAK8D,IAAU,MAExBwW,OAAQ,SAAgBwQ,GACtB,GAAK9qB,KAAK+qB,SAASD,GAAnB,CAEA,IAAK,IAAIvqB,EAAI,EAAGA,EAAIP,KAAKgB,QACnBhB,KAAKO,IAAMuqB,EADgBvqB,KAIjCgQ,EAAOxP,KAAKf,KAAMO,EAAG,GACrBP,KAAKgrB,GAAGC,UAAYjrB,KAAK+nB,aAE3BA,SAAU,WACR,OAAOtT,EAAK1T,KAAKf,KAAM,MAEzBkrB,OAAQ,SAAgBJ,GAOtB,OANK9qB,KAAK+qB,SAASD,GAGjB9qB,KAAKsa,OAAOwQ,GAFZ9qB,KAAKga,IAAI8Q,GAKJ9qB,KAAK+qB,SAASD,KAGzBjrB,OAAOgrB,aAAeA,EAEOnoB,EAUTyoB,YAAYvmB,UAVE0C,EAUS,YAVHsjB,EAUgB,WACtD,OAAO,IAAIC,EAAa7qB,OAVpB0D,OAAOqlB,eACTrlB,OAAOqlB,eAAermB,EAAK4E,EAAM,CAC/BuO,IAAK+U,IAGPloB,EAAI0oB,iBAAiB9jB,EAAMsjB,GAtD/B,SAASC,EAAaG,GAMpB,IAFA,IAAI3G,GAHJrkB,KAAKgrB,GAAKA,GAGOC,UAAU7nB,QAAQ,aAAc,IAAImD,MAAM,OAElDhG,EAAI,EAAGA,EAAI8jB,EAAQrjB,OAAQT,IAClC0G,EAAKlG,KAAKf,KAAMqkB,EAAQ9jB,KAjB9B,IAyEE,IAAI8qB,GAAG,CAAC,SAAS5qB,EAAQf,EAAOD,GAClCC,EAAOD,QAAQ,CACb6iB,WAAc,cACdC,UAAa,oBACbI,SAAY,cACZG,MAAS,SACTI,WAAc,cACdG,UAAa,8EACbuB,QAAW,YACXC,UAAa,eAGb,IAAIyG,GAAG,CAAC,SAAS7qB,EAAQf,EAAOD,GAClC,aAEA,SAASsc,EAAK0F,EAAU5N,GACtB7T,KAAK0L,EAAI+V,EAAS/V,EAClB1L,KAAK4L,EAAI6V,EAAS7V,EAClB5L,KAAK6T,MAAQA,GAAS,EACtB7T,KAAKmkB,iBAAmB,KACxBnkB,KAAKqf,WAAa,KAGpBtD,EAAKnX,UAAU0a,aAAe,WAC5Btf,KAAKmkB,iBAAmB,CACtBzY,EAAG1L,KAAK0L,EACRE,EAAG5L,KAAK4L,IAIZmQ,EAAKnX,UAAU6a,eAAiB,SAAUgC,GACxCzhB,KAAK0L,EAAI+V,EAAS/V,EAClB1L,KAAK4L,EAAI6V,EAAS7V,GAGpBmQ,EAAKnX,UAAUoa,UAAY,WACzB,MAAO,CACLyC,SAAU,CACR/V,EAAG1L,KAAK0L,EACRE,EAAG5L,KAAK4L,GAEViI,MAAO7T,KAAK6T,QAIhBnU,EAAOD,QAAUsc,GAEf,KAAK,GAAG,CAAC,GAjtHqW,CAitHjW","file":"game2048.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Game2048 = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\nvar Grid = require('./grid');\n\nvar Tile = require('./tile');\n\nfunction GameManager(InputManager, View, StorageManager, config) {\n  this.config = config;\n  this.size = config.size; // Size of the grid\n\n  this.storageManager = new StorageManager();\n  this.view = new View(config.strings);\n  this.inputManager = new InputManager();\n  this.startTiles = 2;\n  this.inputManager.bindGameContainer(this.view.gameContainer);\n  this.inputManager.bindRestartButton(this.view.restartButton);\n  this.inputManager.bindRestartButton(this.view.retryButton);\n  this.inputManager.bindKeepPlayingButton(this.view.keepPlayingButton);\n  this.inputManager.on(\"move\", this.move.bind(this));\n  this.inputManager.on(\"restart\", this.restart.bind(this));\n  this.inputManager.on(\"keepPlaying\", this.keepPlaying.bind(this));\n  this.helpTimeout = null;\n  this.setup();\n  this.view.blinkHelp();\n}\n\nGameManager.prototype.getElement = function () {\n  return this.view.element;\n}; // Restart the game\n\n\nGameManager.prototype.restart = function () {\n  if (this.config.persistGameState) {\n    this.storageManager.clearGameState();\n  }\n\n  this.view.continueGame(); // Clear the game won/lost message\n\n  this.setup();\n  this.view.blinkHelp();\n}; // Keep playing after winning (allows going over 2048)\n\n\nGameManager.prototype.keepPlaying = function () {\n  this.keepPlaying = true;\n  this.view.continueGame(); // Clear the game won/lost message\n}; // Return true if the game is lost, or has won and the user hasn't kept playing\n\n\nGameManager.prototype.isGameTerminated = function () {\n  return this.over || this.won && !this.keepPlaying;\n}; // Set up the game\n\n\nGameManager.prototype.setup = function () {\n  var previousState = null;\n\n  if (this.config.persistGameState) {\n    previousState = this.storageManager.getGameState();\n  } // Reload the game from a previous game if present\n\n\n  if (previousState) {\n    this.grid = new Grid(previousState.grid.size, previousState.grid.cells); // Reload grid\n\n    this.score = previousState.score;\n    this.over = previousState.over;\n    this.won = previousState.won;\n    this.keepPlaying = previousState.keepPlaying;\n  } else {\n    this.grid = new Grid(this.size);\n    this.score = 0;\n    this.over = false;\n    this.won = false;\n    this.keepPlaying = false; // Add the initial tiles\n\n    this.addStartTiles();\n  } // Update the view\n\n\n  this.actuate();\n}; // Set up the initial tiles to start the game with\n\n\nGameManager.prototype.addStartTiles = function () {\n  for (var i = 0; i < this.startTiles; i++) {\n    this.addRandomTile();\n  }\n}; // Adds a tile in a random position\n\n\nGameManager.prototype.addRandomTile = function () {\n  if (this.grid.cellsAvailable()) {\n    var value = Math.random() < 0.9 ? 2 : 4;\n    var tile = new Tile(this.grid.randomAvailableCell(), value);\n    this.grid.insertTile(tile);\n  }\n}; // Sends the updated grid to the view\n\n\nGameManager.prototype.actuate = function () {\n  if (this.storageManager.getBestScore() < this.score) {\n    this.storageManager.setBestScore(this.score);\n  } // Clear the state when the game is over (game over only, not win)\n\n\n  if (this.config.persistGameState) {\n    if (this.over) {\n      this.storageManager.clearGameState();\n    } else {\n      this.storageManager.setGameState(this.serialize());\n    }\n  }\n\n  this.view.actuate(this.grid, {\n    score: this.score,\n    over: this.over,\n    won: this.won,\n    bestScore: this.storageManager.getBestScore(),\n    terminated: this.isGameTerminated()\n  });\n}; // Represent the current game as an object\n\n\nGameManager.prototype.serialize = function () {\n  return {\n    grid: this.grid.serialize(),\n    score: this.score,\n    over: this.over,\n    won: this.won,\n    keepPlaying: this.keepPlaying\n  };\n}; // Save all tile positions and remove merger info\n\n\nGameManager.prototype.prepareTiles = function () {\n  this.grid.eachCell(function (x, y, tile) {\n    if (tile) {\n      tile.mergedFrom = null;\n      tile.savePosition();\n    }\n  });\n}; // Move a tile and its representation\n\n\nGameManager.prototype.moveTile = function (tile, cell) {\n  this.grid.cells[tile.x][tile.y] = null;\n  this.grid.cells[cell.x][cell.y] = tile;\n  tile.updatePosition(cell);\n}; // Move tiles on the grid in the specified direction\n\n\nGameManager.prototype.move = function (direction) {\n  // 0: up, 1: right, 2: down, 3: left\n  var self = this;\n  if (this.isGameTerminated()) return; // Don't do anything if the game's over\n\n  var cell, tile;\n  var vector = this.getVector(direction);\n  var traversals = this.buildTraversals(vector);\n  var moved = false; // Save the current tile positions and remove merger information\n\n  this.prepareTiles(); // Traverse the grid in the right direction and move tiles\n\n  traversals.x.forEach(function (x) {\n    traversals.y.forEach(function (y) {\n      cell = {\n        x: x,\n        y: y\n      };\n      tile = self.grid.cellContent(cell);\n\n      if (tile) {\n        var positions = self.findFarthestPosition(cell, vector);\n        var next = self.grid.cellContent(positions.next); // Only one merger per row traversal?\n\n        if (next && next.value === tile.value && !next.mergedFrom) {\n          var merged = new Tile(positions.next, tile.value * 2);\n          merged.mergedFrom = [tile, next];\n          self.grid.insertTile(merged);\n          self.grid.removeTile(tile); // Converge the two tiles' positions\n\n          tile.updatePosition(positions.next); // Update the score\n\n          self.score += merged.value; // The mighty 2048 tile\n\n          if (merged.value === 2048) self.won = true;\n        } else {\n          self.moveTile(tile, positions.farthest);\n        }\n\n        if (!self.positionsEqual(cell, tile)) {\n          moved = true; // The tile moved from its original cell!\n        }\n      }\n    });\n  });\n\n  if (moved) {\n    this.addRandomTile();\n\n    if (!this.movesAvailable()) {\n      this.over = true; // Game over!\n    }\n\n    this.actuate();\n  }\n}; // Get the vector representing the chosen direction\n\n\nGameManager.prototype.getVector = function (direction) {\n  // Vectors representing tile movement\n  var map = {\n    0: {\n      x: 0,\n      y: -1\n    },\n    // Up\n    1: {\n      x: 1,\n      y: 0\n    },\n    // Right\n    2: {\n      x: 0,\n      y: 1\n    },\n    // Down\n    3: {\n      x: -1,\n      y: 0 // Left\n\n    }\n  };\n  return map[direction];\n}; // Build a list of positions to traverse in the right order\n\n\nGameManager.prototype.buildTraversals = function (vector) {\n  var traversals = {\n    x: [],\n    y: []\n  };\n\n  for (var pos = 0; pos < this.size; pos++) {\n    traversals.x.push(pos);\n    traversals.y.push(pos);\n  } // Always traverse from the farthest cell in the chosen direction\n\n\n  if (vector.x === 1) traversals.x = traversals.x.reverse();\n  if (vector.y === 1) traversals.y = traversals.y.reverse();\n  return traversals;\n};\n\nGameManager.prototype.findFarthestPosition = function (cell, vector) {\n  var previous; // Progress towards the vector direction until an obstacle is found\n\n  do {\n    previous = cell;\n    cell = {\n      x: previous.x + vector.x,\n      y: previous.y + vector.y\n    };\n  } while (this.grid.withinBounds(cell) && this.grid.cellAvailable(cell));\n\n  return {\n    farthest: previous,\n    next: cell // Used to check if a merge is required\n\n  };\n};\n\nGameManager.prototype.movesAvailable = function () {\n  return this.grid.cellsAvailable() || this.tileMatchesAvailable();\n}; // Check for available matches between tiles (more expensive check)\n\n\nGameManager.prototype.tileMatchesAvailable = function () {\n  var self = this;\n  var tile;\n\n  for (var x = 0; x < this.size; x++) {\n    for (var y = 0; y < this.size; y++) {\n      tile = this.grid.cellContent({\n        x: x,\n        y: y\n      });\n\n      if (tile) {\n        for (var direction = 0; direction < 4; direction++) {\n          var vector = self.getVector(direction);\n          var cell = {\n            x: x + vector.x,\n            y: y + vector.y\n          };\n          var other = self.grid.cellContent(cell);\n\n          if (other && other.value === tile.value) {\n            return true; // These two tiles can be merged\n          }\n        }\n      }\n    }\n  }\n\n  return false;\n};\n\nGameManager.prototype.positionsEqual = function (first, second) {\n  return first.x === second.x && first.y === second.y;\n};\n\nGameManager.prototype.pause = function () {\n  this.view.pause();\n};\n\nGameManager.prototype.resume = function () {\n  this.view.resume();\n};\n\nmodule.exports = GameManager;\n\n},{\"./grid\":3,\"./tile\":12}],3:[function(require,module,exports){\n\"use strict\";\n\nvar Tile = require('./tile');\n\nfunction Grid(size, previousState) {\n  this.size = size;\n  this.cells = previousState ? this.fromState(previousState) : this.empty();\n} // Build a grid of the specified size\n\n\nGrid.prototype.empty = function () {\n  var cells = [];\n\n  for (var x = 0; x < this.size; x++) {\n    var row = cells[x] = [];\n\n    for (var y = 0; y < this.size; y++) {\n      row.push(null);\n    }\n  }\n\n  return cells;\n};\n\nGrid.prototype.fromState = function (state) {\n  var cells = [];\n\n  for (var x = 0; x < this.size; x++) {\n    var row = cells[x] = [];\n\n    for (var y = 0; y < this.size; y++) {\n      var tile = state[x][y];\n      row.push(tile ? new Tile(tile.position, tile.value) : null);\n    }\n  }\n\n  return cells;\n}; // Find the first available random position\n\n\nGrid.prototype.randomAvailableCell = function () {\n  var cells = this.availableCells();\n\n  if (cells.length) {\n    return cells[Math.floor(Math.random() * cells.length)];\n  }\n};\n\nGrid.prototype.availableCells = function () {\n  var cells = [];\n  this.eachCell(function (x, y, tile) {\n    if (!tile) {\n      cells.push({\n        x: x,\n        y: y\n      });\n    }\n  });\n  return cells;\n}; // Call callback for every cell\n\n\nGrid.prototype.eachCell = function (callback) {\n  for (var x = 0; x < this.size; x++) {\n    for (var y = 0; y < this.size; y++) {\n      callback(x, y, this.cells[x][y]);\n    }\n  }\n}; // Check if there are any cells available\n\n\nGrid.prototype.cellsAvailable = function () {\n  return !!this.availableCells().length;\n}; // Check if the specified cell is taken\n\n\nGrid.prototype.cellAvailable = function (cell) {\n  return !this.cellOccupied(cell);\n};\n\nGrid.prototype.cellOccupied = function (cell) {\n  return !!this.cellContent(cell);\n};\n\nGrid.prototype.cellContent = function (cell) {\n  if (this.withinBounds(cell)) {\n    return this.cells[cell.x][cell.y];\n  } else {\n    return null;\n  }\n}; // Inserts a tile at its position\n\n\nGrid.prototype.insertTile = function (tile) {\n  this.cells[tile.x][tile.y] = tile;\n};\n\nGrid.prototype.removeTile = function (tile) {\n  this.cells[tile.x][tile.y] = null;\n};\n\nGrid.prototype.withinBounds = function (position) {\n  return position.x >= 0 && position.x < this.size && position.y >= 0 && position.y < this.size;\n};\n\nGrid.prototype.serialize = function () {\n  var cellState = [];\n\n  for (var x = 0; x < this.size; x++) {\n    var row = cellState[x] = [];\n\n    for (var y = 0; y < this.size; y++) {\n      row.push(this.cells[x][y] ? this.cells[x][y].serialize() : null);\n    }\n  }\n\n  return {\n    size: this.size,\n    cells: cellState\n  };\n};\n\nmodule.exports = Grid;\n\n},{\"./tile\":12}],4:[function(require,module,exports){\n\"use strict\";\n\nfunction HTMLView(strings) {\n  this.strings = strings;\n  this.element = document.createElement('div');\n  this.element.classList.add('game2048');\n  this.container = document.createElement('div');\n  this.container.classList.add('container');\n  this.element.append(this.container);\n  this.gameContainer = document.createElement(\"div\");\n  this.gameContainer.classList.add('game-container');\n  this.container.append(this.gameContainer); // Message Container\n\n  this.messageContainer = document.createElement('div');\n  this.messageContainer.classList.add('game-message');\n  this.messageContainerParagraph = document.createElement('p');\n  this.messageContainer.append(this.messageContainerParagraph);\n  this.gameContainer.append(this.messageContainer); // -- Lower\n\n  var lower = document.createElement('div');\n  lower.classList.add('lower');\n  this.messageContainer.append(lower); // ------ Keep playing button\n\n  this.keepPlayingButton = document.createElement('a');\n  this.keepPlayingButton.classList.add('keep-playing-button');\n  this.keepPlayingButton.textContent = this.strings.KEEP_GOING;\n  lower.append(this.keepPlayingButton); // ------ Retry button\n\n  this.retryButton = document.createElement('a');\n  this.retryButton.classList.add('retry-button');\n  this.retryButton.textContent = this.strings.TRY_AGAIN;\n  lower.append(this.retryButton);\n  this.messageContainer.append(lower); // Grid container\n\n  var size = 4;\n  var gridContainer = document.createElement('div');\n  gridContainer.classList.add('grid-container');\n\n  for (var i = 0; i !== size; i += 1) {\n    var row = document.createElement('div');\n    row.classList.add('grid-row');\n    gridContainer.append(row);\n\n    for (var j = 0; j !== size; j += 1) {\n      var cell = document.createElement('div');\n      cell.classList.add('grid-cell');\n      row.append(cell);\n    }\n  }\n\n  this.gameContainer.append(gridContainer); //Tile container\n\n  this.tileContainer = document.createElement('div');\n  this.tileContainer.classList.add('tile-container');\n  this.gameContainer.append(this.tileContainer); // Restart button\n\n  this.restartButton = document.createElement('a');\n  this.restartButton.classList.add('restart-button');\n  this.restartButton.textContent = this.strings.NEW_GAME;\n  this.container.append(this.restartButton); // Score wrapper\n\n  var scoreWrapper = document.createElement('div');\n  scoreWrapper.classList.add('score-wrapper');\n  scoreWrapper.classList.add('score-wrapper-score');\n  var scoreLabel = document.createElement('div');\n  scoreLabel.classList.add('label');\n  scoreLabel.textContent = this.strings.SCORE;\n  scoreWrapper.append(scoreLabel);\n  this.scoreContainer = document.createElement('div');\n  this.scoreContainer.classList.add('score-container');\n  this.scoreContainer.textContent = '0';\n  scoreWrapper.append(this.scoreContainer);\n  this.container.append(scoreWrapper); // Hi-score wrapper\n\n  var hiScoreWrapper = document.createElement('div');\n  hiScoreWrapper.classList.add('score-wrapper');\n  hiScoreWrapper.classList.add('score-wrapper-best');\n  var hiScoreLabel = document.createElement('div');\n  hiScoreLabel.classList.add('label');\n  hiScoreLabel.textContent = this.strings.HIGH_SCORE;\n  hiScoreWrapper.append(hiScoreLabel);\n  this.bestContainer = document.createElement('div');\n  this.bestContainer.classList.add('best-container');\n  this.bestContainer.textContent = '0';\n  hiScoreWrapper.append(this.bestContainer);\n  this.container.append(hiScoreWrapper); // Help text\n\n  this.helpText = document.createElement('div');\n  this.helpText.classList.add('helping-text');\n  this.helpText.textContent = this.strings.HELP_TEXT;\n  this.container.append(this.helpText); // Help hand\n\n  this.helpHand = document.createElement('div');\n  this.helpHand.classList.add('helping-hand');\n  this.container.append(this.helpHand);\n  this.helpTimeout = null;\n  this.score = 0;\n}\n\nHTMLView.prototype.actuate = function (grid, metadata) {\n  var self = this;\n  window.requestAnimationFrame(function () {\n    self.clearContainer(self.tileContainer);\n    grid.cells.forEach(function (column) {\n      column.forEach(function (cell) {\n        if (cell) {\n          self.addTile(cell);\n        }\n      });\n    });\n    self.updateScore(metadata.score);\n    self.updateBestScore(metadata.bestScore);\n\n    if (metadata.terminated) {\n      if (metadata.over) {\n        self.message(false); // You lose\n      } else if (metadata.won) {\n        self.message(true); // You win!\n      }\n    }\n  });\n}; // Continues the game (both restart and keep playing)\n\n\nHTMLView.prototype.continueGame = function () {\n  this.clearMessage();\n};\n\nHTMLView.prototype.clearContainer = function (container) {\n  while (container.firstChild) {\n    container.removeChild(container.firstChild);\n  }\n};\n\nHTMLView.prototype.addTile = function (tile) {\n  var self = this;\n  var wrapper = document.createElement(\"div\");\n  var inner = document.createElement(\"div\");\n  var position = tile.previousPosition || {\n    x: tile.x,\n    y: tile.y\n  };\n  var positionClass = this.positionClass(position); // We can't use classlist because it somehow glitches when replacing classes\n\n  var classes = [\"tile\", \"tile-\" + tile.value, positionClass];\n  if (tile.value > 2048) classes.push(\"tile-super\");\n  this.applyClasses(wrapper, classes);\n  inner.classList.add(\"tile-inner\");\n  inner.textContent = tile.value;\n\n  if (tile.previousPosition) {\n    // Make sure that the tile gets rendered in the previous position first\n    window.requestAnimationFrame(function () {\n      classes[2] = self.positionClass({\n        x: tile.x,\n        y: tile.y\n      });\n      self.applyClasses(wrapper, classes); // Update the position\n    });\n  } else if (tile.mergedFrom) {\n    classes.push(\"tile-merged\");\n    this.applyClasses(wrapper, classes); // Render the tiles that merged\n\n    tile.mergedFrom.forEach(function (merged) {\n      self.addTile(merged);\n    });\n  } else {\n    classes.push(\"tile-new\");\n    this.applyClasses(wrapper, classes);\n  } // Add the inner part of the tile to the wrapper\n\n\n  wrapper.appendChild(inner); // Put the tile on the board\n\n  this.tileContainer.appendChild(wrapper);\n};\n\nHTMLView.prototype.applyClasses = function (element, classes) {\n  element.setAttribute(\"class\", classes.join(\" \"));\n};\n\nHTMLView.prototype.normalizePosition = function (position) {\n  return {\n    x: position.x + 1,\n    y: position.y + 1\n  };\n};\n\nHTMLView.prototype.positionClass = function (position) {\n  position = this.normalizePosition(position);\n  return \"tile-position-\" + position.x + \"-\" + position.y;\n};\n\nHTMLView.prototype.updateScore = function (score) {\n  this.clearContainer(this.scoreContainer);\n  var difference = score - this.score;\n  this.score = score;\n  this.scoreContainer.textContent = this.score;\n\n  if (difference > 0) {\n    var addition = document.createElement(\"div\");\n    addition.classList.add(\"score-addition\");\n    addition.textContent = \"+\" + difference;\n    this.scoreContainer.appendChild(addition);\n  }\n};\n\nHTMLView.prototype.updateBestScore = function (bestScore) {\n  this.bestContainer.textContent = bestScore;\n};\n\nHTMLView.prototype.message = function (won) {\n  var type = won ? \"game-won\" : \"game-over\";\n  var message = won ? this.strings.YOU_WIN : this.strings.GAME_OVER;\n  this.messageContainer.classList.add(type);\n  this.messageContainerParagraph.textContent = message;\n};\n\nHTMLView.prototype.clearMessage = function () {\n  // IE only takes one value to remove at a time.\n  this.messageContainer.classList.remove(\"game-won\");\n  this.messageContainer.classList.remove(\"game-over\");\n};\n\nHTMLView.prototype.showHelp = function () {\n  window.setTimeout(function () {\n    this.helpHand.classList.add('shown');\n    this.helpText.classList.add('shown');\n  }.bind(this), 0);\n};\n\nHTMLView.prototype.hideHelp = function () {\n  if (this.helpTimeout !== null) {\n    window.clearTimeout(this.helpTimeout);\n    this.helpTimeout = null;\n  }\n\n  this.helpHand.classList.remove('shown');\n  this.helpText.classList.remove('shown');\n};\n\nHTMLView.prototype.blinkHelp = function () {\n  this.hideHelp();\n  this.helpTimeout = window.setTimeout(this.hideHelp.bind(this), 6000);\n  this.showHelp();\n};\n\nHTMLView.prototype.pause = function () {\n  this.element.classList.add('paused');\n};\n\nHTMLView.prototype.resume = function () {\n  this.element.classList.remove('paused');\n};\n\nmodule.exports = HTMLView;\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\nvar Hammer = require('hammerjs');\n\nfunction InputManager() {\n  this.events = {};\n}\n\nInputManager.prototype.on = function (event, callback) {\n  if (!this.events[event]) {\n    this.events[event] = [];\n  }\n\n  this.events[event].push(callback);\n};\n\nInputManager.prototype.emit = function (event, data) {\n  var callbacks = this.events[event];\n\n  if (callbacks) {\n    callbacks.forEach(function (callback) {\n      callback(data);\n    });\n  }\n};\n\nInputManager.prototype.bindKeyboard = function () {\n  var self = this;\n  var map = {\n    38: 0,\n    // Up\n    39: 1,\n    // Right\n    40: 2,\n    // Down\n    37: 3,\n    // Left\n    75: 0,\n    // Vim up\n    76: 1,\n    // Vim right\n    74: 2,\n    // Vim down\n    72: 3,\n    // Vim left\n    87: 0,\n    // W\n    68: 1,\n    // D\n    83: 2,\n    // S\n    65: 3 // A\n\n  }; // Respond to direction keys\n\n  document.addEventListener(\"keydown\", function (event) {\n    var modifiers = event.altKey || event.ctrlKey || event.metaKey || event.shiftKey;\n    var mapped = map[event.which];\n\n    if (!modifiers) {\n      if (mapped !== undefined) {\n        event.preventDefault();\n        self.emit(\"move\", mapped);\n      }\n    } // R key restarts the game\n\n\n    if (!modifiers && event.which === 82) {\n      self.restart.call(self, event);\n    }\n  });\n};\n\nInputManager.prototype.bindGameContainer = function (gameContainer) {\n  var self = this;\n  var mc = new Hammer.Manager(gameContainer);\n  mc.add(new Hammer.Swipe());\n  mc.on('swiperight', function () {\n    return self.emit(\"move\", 1);\n  });\n  mc.on('swipeleft', function () {\n    return self.emit(\"move\", 3);\n  });\n  mc.on('swipeup', function () {\n    return self.emit(\"move\", 0);\n  });\n  mc.on('swipedown', function () {\n    return self.emit(\"move\", 2);\n  });\n};\n\nInputManager.prototype.bindRestartButton = function (button) {\n  this.bindButtonPress(button, this.restart);\n};\n\nInputManager.prototype.bindKeepPlayingButton = function (button) {\n  this.bindButtonPress(button, this.keepPlaying);\n};\n\nInputManager.prototype.restart = function (event) {\n  event.preventDefault();\n  this.emit(\"restart\");\n};\n\nInputManager.prototype.keepPlaying = function (event) {\n  event.preventDefault();\n  this.emit(\"keepPlaying\");\n};\n\nInputManager.prototype.bindButtonPress = function (button, fn) {\n  button.addEventListener(\"click\", fn.bind(this));\n  button.addEventListener(this.eventTouchend, fn.bind(this));\n};\n\nmodule.exports = InputManager;\n\n},{\"hammerjs\":1}],6:[function(require,module,exports){\n\"use strict\";\n\nif (window.IMAGINARY === undefined) {\n  window.IMAGINARY = {};\n}\n\nif (window.IMAGINARY.game2048 === undefined) {\n  window.IMAGINARY.game2048 = {};\n}\n\nwindow.IMAGINARY.game2048.fakeStorage = {\n  _data: {},\n  setItem: function setItem(id, val) {\n    return this._data[id] = String(val);\n  },\n  getItem: function getItem(id) {\n    return this._data.hasOwnProperty(id) ? this._data[id] : undefined;\n  },\n  removeItem: function removeItem(id) {\n    return delete this._data[id];\n  },\n  clear: function clear() {\n    return this._data = {};\n  }\n};\n\nfunction LocalStorageManager() {\n  this.bestScoreKey = \"IMAGINARY.game2048.bestScore\";\n  this.bestScoreDateKey = \"IMAGINARY.game2048.bestScoreDate\";\n  this.gameStateKey = \"IMAGINARY.game2048.gameState\";\n  var supported = this.localStorageSupported();\n  this.storage = supported ? window.localStorage : window.IMAGINARY.game2048.fakeStorage;\n}\n\nLocalStorageManager.prototype.localStorageSupported = function () {\n  var testKey = \"test\";\n\n  try {\n    var storage = window.localStorage;\n    storage.setItem(testKey, \"1\");\n    storage.removeItem(testKey);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nLocalStorageManager.prototype.getCurrentDate = function () {\n  var now = new Date();\n\n  var pad2 = function pad2(number) {\n    return number.toString().padStart(2, '0');\n  };\n\n  return [now.getFullYear(), pad2(now.getMonth() + 1), pad2(now.getDate())].join('-');\n}; // Best score getters/setters\n\n\nLocalStorageManager.prototype.getBestScore = function () {\n  var bestDate = this.storage.getItem(this.bestScoreDateKey);\n\n  if (bestDate === this.getCurrentDate()) {\n    return this.storage.getItem(this.bestScoreKey) || 0;\n  }\n\n  return 0;\n};\n\nLocalStorageManager.prototype.setBestScore = function (score) {\n  this.storage.setItem(this.bestScoreDateKey, this.getCurrentDate());\n  this.storage.setItem(this.bestScoreKey, score);\n}; // Game state getters/setters and clearing\n\n\nLocalStorageManager.prototype.getGameState = function () {\n  var stateJSON = this.storage.getItem(this.gameStateKey);\n  return stateJSON ? JSON.parse(stateJSON) : null;\n};\n\nLocalStorageManager.prototype.setGameState = function (gameState) {\n  this.storage.setItem(this.gameStateKey, JSON.stringify(gameState));\n};\n\nLocalStorageManager.prototype.clearGameState = function () {\n  this.storage.removeItem(this.gameStateKey);\n};\n\nmodule.exports = LocalStorageManager;\n\n},{}],7:[function(require,module,exports){\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nrequire('./polyfills/bind_polyfill');\n\nrequire('./polyfills/classlist_polyfill');\n\nrequire('./polyfills/animframe_polyfill');\n\nvar GameManager = require('./game_manager');\n\nvar InputManager = require('./input_manager');\n\nvar HTMLView = require('./html_view');\n\nvar LocalStorageManager = require('./local_storage_manager');\n\nvar strings = require('./strings_de.json');\n\nvar Game2048 =\n/*#__PURE__*/\nfunction () {\n  function Game2048() {\n    _classCallCheck(this, Game2048);\n\n    var config = {\n      size: 4,\n      persistGameState: false,\n      strings: strings\n    };\n    this.gameManager = new GameManager(InputManager, HTMLView, LocalStorageManager, config);\n  }\n\n  _createClass(Game2048, [{\n    key: \"pause\",\n    value: function pause() {\n      this.gameManager.pause();\n    }\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      this.gameManager.resume();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.gameManager.restart();\n    }\n  }, {\n    key: \"domElement\",\n    get: function get() {\n      return this.gameManager.getElement();\n    }\n  }]);\n\n  return Game2048;\n}();\n\nmodule.exports = Game2048;\n\n},{\"./game_manager\":2,\"./html_view\":4,\"./input_manager\":5,\"./local_storage_manager\":6,\"./polyfills/animframe_polyfill\":8,\"./polyfills/bind_polyfill\":9,\"./polyfills/classlist_polyfill\":10,\"./strings_de.json\":11}],8:[function(require,module,exports){\n\"use strict\";\n\n(function () {\n  var lastTime = 0;\n  var vendors = ['webkit', 'moz'];\n\n  for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n    window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n    window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n  }\n\n  if (!window.requestAnimationFrame) {\n    window.requestAnimationFrame = function (callback) {\n      var currTime = new Date().getTime();\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n      var id = window.setTimeout(function () {\n        callback(currTime + timeToCall);\n      }, timeToCall);\n      lastTime = currTime + timeToCall;\n      return id;\n    };\n  }\n\n  if (!window.cancelAnimationFrame) {\n    window.cancelAnimationFrame = function (id) {\n      clearTimeout(id);\n    };\n  }\n})();\n\n},{}],9:[function(require,module,exports){\n\"use strict\";\n\nFunction.prototype.bind = Function.prototype.bind || function (target) {\n  var self = this;\n  return function (args) {\n    if (!(args instanceof Array)) {\n      args = [args];\n    }\n\n    self.apply(target, args);\n  };\n};\n\n},{}],10:[function(require,module,exports){\n\"use strict\";\n\n(function () {\n  if (typeof window.Element === \"undefined\" || \"classList\" in document.documentElement) {\n    return;\n  }\n\n  var prototype = Array.prototype,\n      push = prototype.push,\n      splice = prototype.splice,\n      join = prototype.join;\n\n  function DOMTokenList(el) {\n    this.el = el; // The className needs to be trimmed and split on whitespace\n    // to retrieve a list of classes.\n\n    var classes = el.className.replace(/^\\s+|\\s+$/g, '').split(/\\s+/);\n\n    for (var i = 0; i < classes.length; i++) {\n      push.call(this, classes[i]);\n    }\n  }\n\n  DOMTokenList.prototype = {\n    add: function add(token) {\n      if (this.contains(token)) return;\n      push.call(this, token);\n      this.el.className = this.toString();\n    },\n    contains: function contains(token) {\n      return this.el.className.indexOf(token) != -1;\n    },\n    item: function item(index) {\n      return this[index] || null;\n    },\n    remove: function remove(token) {\n      if (!this.contains(token)) return;\n\n      for (var i = 0; i < this.length; i++) {\n        if (this[i] == token) break;\n      }\n\n      splice.call(this, i, 1);\n      this.el.className = this.toString();\n    },\n    toString: function toString() {\n      return join.call(this, ' ');\n    },\n    toggle: function toggle(token) {\n      if (!this.contains(token)) {\n        this.add(token);\n      } else {\n        this.remove(token);\n      }\n\n      return this.contains(token);\n    }\n  };\n  window.DOMTokenList = DOMTokenList;\n\n  function defineElementGetter(obj, prop, getter) {\n    if (Object.defineProperty) {\n      Object.defineProperty(obj, prop, {\n        get: getter\n      });\n    } else {\n      obj.__defineGetter__(prop, getter);\n    }\n  }\n\n  defineElementGetter(HTMLElement.prototype, 'classList', function () {\n    return new DOMTokenList(this);\n  });\n})();\n\n},{}],11:[function(require,module,exports){\nmodule.exports={\n  \"KEEP_GOING\": \"Mach weiter\",\n  \"TRY_AGAIN\": \"Nochmal versuchen\",\n  \"NEW_GAME\": \"Neues Spiel\",\n  \"SCORE\": \"Punkte\",\n  \"HIGH_SCORE\": \"Tagesrekord\",\n  \"HELP_TEXT\": \"Wische über das Spielfeld, um Kacheln mit demselben Symbol zu verschmelzen.\",\n  \"YOU_WIN\": \"Gewonnen!\",\n  \"GAME_OVER\": \"Game over!\"\n}\n\n},{}],12:[function(require,module,exports){\n\"use strict\";\n\nfunction Tile(position, value) {\n  this.x = position.x;\n  this.y = position.y;\n  this.value = value || 2;\n  this.previousPosition = null;\n  this.mergedFrom = null; // Tracks tiles that merged together\n}\n\nTile.prototype.savePosition = function () {\n  this.previousPosition = {\n    x: this.x,\n    y: this.y\n  };\n};\n\nTile.prototype.updatePosition = function (position) {\n  this.x = position.x;\n  this.y = position.y;\n};\n\nTile.prototype.serialize = function () {\n  return {\n    position: {\n      x: this.x,\n      y: this.y\n    },\n    value: this.value\n  };\n};\n\nmodule.exports = Tile;\n\n},{}]},{},[7])(7)\n});\n"]}